in_source: |-
  .data:
      input: 1
      output: 2
      stop_char: 48

  .code:
      loop:
          ld r0 input
          st output r0
          mov r1 stop_char
          cmp r0 r1
          jnz loop

      hlt
in_stdin: |-
  Hello, world
out_code: |-
  [
      {
          "index": 0,
          "opcode": "jmp",
          "terms": [
              7
          ]
      },
      null,
      null,
      1,
      2,
      48,
      7,
      {
          "index": 1,
          "opcode": "ld",
          "terms": [
              "r0",
              1
          ]
      },
      {
          "index": 2,
          "opcode": "st",
          "terms": [
              2,
              "r0"
          ]
      },
      {
          "index": 3,
          "opcode": "ld",
          "terms": [
              "r1",
              5
          ]
      },
      {
          "index": 4,
          "opcode": "cmp",
          "terms": [
              "r0",
              "r1"
          ]
      },
      {
          "index": 5,
          "opcode": "jnz",
          "terms": [
              7
          ]
      },
      {
          "index": 6,
          "opcode": "hlt",
          "terms": []
      }
  ]
out_stdout: |
  ================================================
  output: Hello, world
  program_counter: 7
  ticks: 196
out_log: |
  DEBUG   machine:simulate      TICK: 0	PC: 0	AR: 0	DR: 0	R0: 0	R1: 0	R2: 0	R3: 0	R4: 0	LEFT_REG: 0	RIGHT_REG: 0	ALU: 0	MPC: 0	PROGRAM: None	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 1	PC: 0	AR: 0	DR: jmp(7)	R0: 0	R1: 0	R2: 0	R3: 0	R4: 0	LEFT_REG: 0	RIGHT_REG: 0	ALU: 0	MPC: 25	PROGRAM: jmp(7)	SIGNALS: Signal.LATCH_PROGRAM_COUNTER, PC.MPROGRAM | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 2	PC: 7	AR: 0	DR: jmp(7)	R0: 0	R1: 0	R2: 0	R3: 0	R4: 0	LEFT_REG: 0	RIGHT_REG: 0	ALU: 0	MPC: 0	PROGRAM: jmp(7)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 3	PC: 7	AR: 7	DR: ld(r0 1)	R0: 0	R1: 0	R2: 0	R3: 0	R4: 0	LEFT_REG: 0	RIGHT_REG: 0	ALU: 0	MPC: 9	PROGRAM: ld(r0 1)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 4	PC: 7	AR: 1	DR: ld(r0 1)	R0: 0	R1: 0	R2: 0	R3: 0	R4: 0	LEFT_REG: 0	RIGHT_REG: 0	ALU: 1	MPC: 10	PROGRAM: ld(r0 1)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  INFO    machine:signal_read   input: ['e', 'l', 'l', 'o', ',', ' ', 'w', 'o', 'r', 'l', 'd'] >> H
  DEBUG   machine:simulate      TICK: 5	PC: 7	AR: 1	DR: 72	R0: 0	R1: 0	R2: 0	R3: 0	R4: 0	LEFT_REG: 0	RIGHT_REG: 0	ALU: 1	MPC: 11	PROGRAM: ld(r0 1)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 6	PC: 8	AR: 1	DR: 72	R0: 72	R1: 0	R2: 0	R3: 0	R4: 0	LEFT_REG: 0	RIGHT_REG: 0	ALU: 1	MPC: 0	PROGRAM: ld(r0 1)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 7	PC: 8	AR: 8	DR: st(2 r0)	R0: 72	R1: 0	R2: 0	R3: 0	R4: 0	LEFT_REG: 0	RIGHT_REG: 0	ALU: 1	MPC: 3	PROGRAM: st(2 r0)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 8	PC: 8	AR: 2	DR: st(2 r0)	R0: 72	R1: 0	R2: 0	R3: 0	R4: 0	LEFT_REG: 0	RIGHT_REG: 0	ALU: 2	MPC: 4	PROGRAM: st(2 r0)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.LEFT | Signal.LATCH_DATA_REGISTER, DataRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 9	PC: 8	AR: 2	DR: 72	R0: 72	R1: 0	R2: 0	R3: 0	R4: 0	LEFT_REG: 72	RIGHT_REG: 0	ALU: 72	MPC: 5	PROGRAM: st(2 r0)	SIGNALS: Signal.SIGNAL_WRITE | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  INFO    machine:signal_write  output: ['H'] << H
  DEBUG   machine:simulate      TICK: 10	PC: 9	AR: 2	DR: 72	R0: 72	R1: 0	R2: 0	R3: 0	R4: 0	LEFT_REG: 72	RIGHT_REG: 0	ALU: 72	MPC: 0	PROGRAM: st(2 r0)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 11	PC: 9	AR: 9	DR: ld(r1 5)	R0: 72	R1: 0	R2: 0	R3: 0	R4: 0	LEFT_REG: 72	RIGHT_REG: 0	ALU: 72	MPC: 9	PROGRAM: ld(r1 5)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 12	PC: 9	AR: 5	DR: ld(r1 5)	R0: 72	R1: 0	R2: 0	R3: 0	R4: 0	LEFT_REG: 72	RIGHT_REG: 0	ALU: 5	MPC: 10	PROGRAM: ld(r1 5)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 13	PC: 9	AR: 5	DR: 48	R0: 72	R1: 0	R2: 0	R3: 0	R4: 0	LEFT_REG: 72	RIGHT_REG: 0	ALU: 5	MPC: 11	PROGRAM: ld(r1 5)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 14	PC: 10	AR: 5	DR: 48	R0: 72	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 72	RIGHT_REG: 0	ALU: 5	MPC: 0	PROGRAM: ld(r1 5)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 15	PC: 10	AR: 10	DR: cmp(r0 r1)	R0: 72	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 72	RIGHT_REG: 0	ALU: 5	MPC: 23	PROGRAM: cmp(r0 r1)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_RIGHT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.REGISTER | Signal.EXECUTE_ALU_OPERATION, ALUOperations.CMP | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 16	PC: 11	AR: 10	DR: cmp(r0 r1)	R0: 72	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 72	RIGHT_REG: 48	ALU: 24	MPC: 0	PROGRAM: cmp(r0 r1)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 17	PC: 11	AR: 11	DR: jnz(7)	R0: 72	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 72	RIGHT_REG: 48	ALU: 24	MPC: 27	PROGRAM: jnz(7)	SIGNALS: Signal.LATCH_PROGRAM_COUNTER, PC.MPROGRAM, Signal.CHECK_NOT_ZERO_FLAG | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 18	PC: 7	AR: 11	DR: jnz(7)	R0: 72	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 72	RIGHT_REG: 48	ALU: 24	MPC: 0	PROGRAM: jnz(7)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 19	PC: 7	AR: 7	DR: ld(r0 1)	R0: 72	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 72	RIGHT_REG: 48	ALU: 24	MPC: 9	PROGRAM: ld(r0 1)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 20	PC: 7	AR: 1	DR: ld(r0 1)	R0: 72	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 72	RIGHT_REG: 48	ALU: 1	MPC: 10	PROGRAM: ld(r0 1)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  INFO    machine:signal_read   input: ['l', 'l', 'o', ',', ' ', 'w', 'o', 'r', 'l', 'd'] >> e
  DEBUG   machine:simulate      TICK: 21	PC: 7	AR: 1	DR: 101	R0: 72	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 72	RIGHT_REG: 48	ALU: 1	MPC: 11	PROGRAM: ld(r0 1)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 22	PC: 8	AR: 1	DR: 101	R0: 101	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 72	RIGHT_REG: 48	ALU: 1	MPC: 0	PROGRAM: ld(r0 1)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 23	PC: 8	AR: 8	DR: st(2 r0)	R0: 101	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 72	RIGHT_REG: 48	ALU: 1	MPC: 3	PROGRAM: st(2 r0)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 24	PC: 8	AR: 2	DR: st(2 r0)	R0: 101	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 72	RIGHT_REG: 48	ALU: 2	MPC: 4	PROGRAM: st(2 r0)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.LEFT | Signal.LATCH_DATA_REGISTER, DataRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 25	PC: 8	AR: 2	DR: 101	R0: 101	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 101	RIGHT_REG: 48	ALU: 101	MPC: 5	PROGRAM: st(2 r0)	SIGNALS: Signal.SIGNAL_WRITE | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  INFO    machine:signal_write  output: ['H', 'e'] << e
  DEBUG   machine:simulate      TICK: 26	PC: 9	AR: 2	DR: 101	R0: 101	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 101	RIGHT_REG: 48	ALU: 101	MPC: 0	PROGRAM: st(2 r0)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 27	PC: 9	AR: 9	DR: ld(r1 5)	R0: 101	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 101	RIGHT_REG: 48	ALU: 101	MPC: 9	PROGRAM: ld(r1 5)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 28	PC: 9	AR: 5	DR: ld(r1 5)	R0: 101	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 101	RIGHT_REG: 48	ALU: 5	MPC: 10	PROGRAM: ld(r1 5)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 29	PC: 9	AR: 5	DR: 48	R0: 101	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 101	RIGHT_REG: 48	ALU: 5	MPC: 11	PROGRAM: ld(r1 5)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 30	PC: 10	AR: 5	DR: 48	R0: 101	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 101	RIGHT_REG: 48	ALU: 5	MPC: 0	PROGRAM: ld(r1 5)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 31	PC: 10	AR: 10	DR: cmp(r0 r1)	R0: 101	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 101	RIGHT_REG: 48	ALU: 5	MPC: 23	PROGRAM: cmp(r0 r1)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_RIGHT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.REGISTER | Signal.EXECUTE_ALU_OPERATION, ALUOperations.CMP | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 32	PC: 11	AR: 10	DR: cmp(r0 r1)	R0: 101	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 101	RIGHT_REG: 48	ALU: 53	MPC: 0	PROGRAM: cmp(r0 r1)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 33	PC: 11	AR: 11	DR: jnz(7)	R0: 101	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 101	RIGHT_REG: 48	ALU: 53	MPC: 27	PROGRAM: jnz(7)	SIGNALS: Signal.LATCH_PROGRAM_COUNTER, PC.MPROGRAM, Signal.CHECK_NOT_ZERO_FLAG | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 34	PC: 7	AR: 11	DR: jnz(7)	R0: 101	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 101	RIGHT_REG: 48	ALU: 53	MPC: 0	PROGRAM: jnz(7)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 35	PC: 7	AR: 7	DR: ld(r0 1)	R0: 101	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 101	RIGHT_REG: 48	ALU: 53	MPC: 9	PROGRAM: ld(r0 1)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 36	PC: 7	AR: 1	DR: ld(r0 1)	R0: 101	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 101	RIGHT_REG: 48	ALU: 1	MPC: 10	PROGRAM: ld(r0 1)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  INFO    machine:signal_read   input: ['l', 'o', ',', ' ', 'w', 'o', 'r', 'l', 'd'] >> l
  DEBUG   machine:simulate      TICK: 37	PC: 7	AR: 1	DR: 108	R0: 101	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 101	RIGHT_REG: 48	ALU: 1	MPC: 11	PROGRAM: ld(r0 1)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 38	PC: 8	AR: 1	DR: 108	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 101	RIGHT_REG: 48	ALU: 1	MPC: 0	PROGRAM: ld(r0 1)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 39	PC: 8	AR: 8	DR: st(2 r0)	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 101	RIGHT_REG: 48	ALU: 1	MPC: 3	PROGRAM: st(2 r0)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 40	PC: 8	AR: 2	DR: st(2 r0)	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 101	RIGHT_REG: 48	ALU: 2	MPC: 4	PROGRAM: st(2 r0)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.LEFT | Signal.LATCH_DATA_REGISTER, DataRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 41	PC: 8	AR: 2	DR: 108	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 108	MPC: 5	PROGRAM: st(2 r0)	SIGNALS: Signal.SIGNAL_WRITE | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  INFO    machine:signal_write  output: ['H', 'e', 'l'] << l
  DEBUG   machine:simulate      TICK: 42	PC: 9	AR: 2	DR: 108	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 108	MPC: 0	PROGRAM: st(2 r0)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 43	PC: 9	AR: 9	DR: ld(r1 5)	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 108	MPC: 9	PROGRAM: ld(r1 5)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 44	PC: 9	AR: 5	DR: ld(r1 5)	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 5	MPC: 10	PROGRAM: ld(r1 5)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 45	PC: 9	AR: 5	DR: 48	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 5	MPC: 11	PROGRAM: ld(r1 5)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 46	PC: 10	AR: 5	DR: 48	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 5	MPC: 0	PROGRAM: ld(r1 5)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 47	PC: 10	AR: 10	DR: cmp(r0 r1)	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 5	MPC: 23	PROGRAM: cmp(r0 r1)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_RIGHT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.REGISTER | Signal.EXECUTE_ALU_OPERATION, ALUOperations.CMP | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 48	PC: 11	AR: 10	DR: cmp(r0 r1)	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 60	MPC: 0	PROGRAM: cmp(r0 r1)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 49	PC: 11	AR: 11	DR: jnz(7)	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 60	MPC: 27	PROGRAM: jnz(7)	SIGNALS: Signal.LATCH_PROGRAM_COUNTER, PC.MPROGRAM, Signal.CHECK_NOT_ZERO_FLAG | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 50	PC: 7	AR: 11	DR: jnz(7)	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 60	MPC: 0	PROGRAM: jnz(7)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 51	PC: 7	AR: 7	DR: ld(r0 1)	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 60	MPC: 9	PROGRAM: ld(r0 1)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 52	PC: 7	AR: 1	DR: ld(r0 1)	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 1	MPC: 10	PROGRAM: ld(r0 1)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  INFO    machine:signal_read   input: ['o', ',', ' ', 'w', 'o', 'r', 'l', 'd'] >> l
  DEBUG   machine:simulate      TICK: 53	PC: 7	AR: 1	DR: 108	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 1	MPC: 11	PROGRAM: ld(r0 1)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 54	PC: 8	AR: 1	DR: 108	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 1	MPC: 0	PROGRAM: ld(r0 1)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 55	PC: 8	AR: 8	DR: st(2 r0)	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 1	MPC: 3	PROGRAM: st(2 r0)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 56	PC: 8	AR: 2	DR: st(2 r0)	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 2	MPC: 4	PROGRAM: st(2 r0)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.LEFT | Signal.LATCH_DATA_REGISTER, DataRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 57	PC: 8	AR: 2	DR: 108	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 108	MPC: 5	PROGRAM: st(2 r0)	SIGNALS: Signal.SIGNAL_WRITE | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  INFO    machine:signal_write  output: ['H', 'e', 'l', 'l'] << l
  DEBUG   machine:simulate      TICK: 58	PC: 9	AR: 2	DR: 108	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 108	MPC: 0	PROGRAM: st(2 r0)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 59	PC: 9	AR: 9	DR: ld(r1 5)	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 108	MPC: 9	PROGRAM: ld(r1 5)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 60	PC: 9	AR: 5	DR: ld(r1 5)	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 5	MPC: 10	PROGRAM: ld(r1 5)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 61	PC: 9	AR: 5	DR: 48	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 5	MPC: 11	PROGRAM: ld(r1 5)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 62	PC: 10	AR: 5	DR: 48	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 5	MPC: 0	PROGRAM: ld(r1 5)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 63	PC: 10	AR: 10	DR: cmp(r0 r1)	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 5	MPC: 23	PROGRAM: cmp(r0 r1)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_RIGHT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.REGISTER | Signal.EXECUTE_ALU_OPERATION, ALUOperations.CMP | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 64	PC: 11	AR: 10	DR: cmp(r0 r1)	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 60	MPC: 0	PROGRAM: cmp(r0 r1)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 65	PC: 11	AR: 11	DR: jnz(7)	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 60	MPC: 27	PROGRAM: jnz(7)	SIGNALS: Signal.LATCH_PROGRAM_COUNTER, PC.MPROGRAM, Signal.CHECK_NOT_ZERO_FLAG | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 66	PC: 7	AR: 11	DR: jnz(7)	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 60	MPC: 0	PROGRAM: jnz(7)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 67	PC: 7	AR: 7	DR: ld(r0 1)	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 60	MPC: 9	PROGRAM: ld(r0 1)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 68	PC: 7	AR: 1	DR: ld(r0 1)	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 1	MPC: 10	PROGRAM: ld(r0 1)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  INFO    machine:signal_read   input: [',', ' ', 'w', 'o', 'r', 'l', 'd'] >> o
  DEBUG   machine:simulate      TICK: 69	PC: 7	AR: 1	DR: 111	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 1	MPC: 11	PROGRAM: ld(r0 1)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 70	PC: 8	AR: 1	DR: 111	R0: 111	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 1	MPC: 0	PROGRAM: ld(r0 1)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 71	PC: 8	AR: 8	DR: st(2 r0)	R0: 111	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 1	MPC: 3	PROGRAM: st(2 r0)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 72	PC: 8	AR: 2	DR: st(2 r0)	R0: 111	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 2	MPC: 4	PROGRAM: st(2 r0)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.LEFT | Signal.LATCH_DATA_REGISTER, DataRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 73	PC: 8	AR: 2	DR: 111	R0: 111	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 48	ALU: 111	MPC: 5	PROGRAM: st(2 r0)	SIGNALS: Signal.SIGNAL_WRITE | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  INFO    machine:signal_write  output: ['H', 'e', 'l', 'l', 'o'] << o
  DEBUG   machine:simulate      TICK: 74	PC: 9	AR: 2	DR: 111	R0: 111	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 48	ALU: 111	MPC: 0	PROGRAM: st(2 r0)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 75	PC: 9	AR: 9	DR: ld(r1 5)	R0: 111	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 48	ALU: 111	MPC: 9	PROGRAM: ld(r1 5)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 76	PC: 9	AR: 5	DR: ld(r1 5)	R0: 111	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 48	ALU: 5	MPC: 10	PROGRAM: ld(r1 5)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 77	PC: 9	AR: 5	DR: 48	R0: 111	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 48	ALU: 5	MPC: 11	PROGRAM: ld(r1 5)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 78	PC: 10	AR: 5	DR: 48	R0: 111	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 48	ALU: 5	MPC: 0	PROGRAM: ld(r1 5)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 79	PC: 10	AR: 10	DR: cmp(r0 r1)	R0: 111	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 48	ALU: 5	MPC: 23	PROGRAM: cmp(r0 r1)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_RIGHT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.REGISTER | Signal.EXECUTE_ALU_OPERATION, ALUOperations.CMP | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 80	PC: 11	AR: 10	DR: cmp(r0 r1)	R0: 111	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 48	ALU: 63	MPC: 0	PROGRAM: cmp(r0 r1)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 81	PC: 11	AR: 11	DR: jnz(7)	R0: 111	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 48	ALU: 63	MPC: 27	PROGRAM: jnz(7)	SIGNALS: Signal.LATCH_PROGRAM_COUNTER, PC.MPROGRAM, Signal.CHECK_NOT_ZERO_FLAG | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 82	PC: 7	AR: 11	DR: jnz(7)	R0: 111	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 48	ALU: 63	MPC: 0	PROGRAM: jnz(7)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 83	PC: 7	AR: 7	DR: ld(r0 1)	R0: 111	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 48	ALU: 63	MPC: 9	PROGRAM: ld(r0 1)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 84	PC: 7	AR: 1	DR: ld(r0 1)	R0: 111	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 48	ALU: 1	MPC: 10	PROGRAM: ld(r0 1)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  INFO    machine:signal_read   input: [' ', 'w', 'o', 'r', 'l', 'd'] >> ,
  DEBUG   machine:simulate      TICK: 85	PC: 7	AR: 1	DR: 44	R0: 111	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 48	ALU: 1	MPC: 11	PROGRAM: ld(r0 1)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 86	PC: 8	AR: 1	DR: 44	R0: 44	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 48	ALU: 1	MPC: 0	PROGRAM: ld(r0 1)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 87	PC: 8	AR: 8	DR: st(2 r0)	R0: 44	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 48	ALU: 1	MPC: 3	PROGRAM: st(2 r0)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 88	PC: 8	AR: 2	DR: st(2 r0)	R0: 44	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 48	ALU: 2	MPC: 4	PROGRAM: st(2 r0)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.LEFT | Signal.LATCH_DATA_REGISTER, DataRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 89	PC: 8	AR: 2	DR: 44	R0: 44	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 44	RIGHT_REG: 48	ALU: 44	MPC: 5	PROGRAM: st(2 r0)	SIGNALS: Signal.SIGNAL_WRITE | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  INFO    machine:signal_write  output: ['H', 'e', 'l', 'l', 'o', ','] << ,
  DEBUG   machine:simulate      TICK: 90	PC: 9	AR: 2	DR: 44	R0: 44	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 44	RIGHT_REG: 48	ALU: 44	MPC: 0	PROGRAM: st(2 r0)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 91	PC: 9	AR: 9	DR: ld(r1 5)	R0: 44	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 44	RIGHT_REG: 48	ALU: 44	MPC: 9	PROGRAM: ld(r1 5)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 92	PC: 9	AR: 5	DR: ld(r1 5)	R0: 44	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 44	RIGHT_REG: 48	ALU: 5	MPC: 10	PROGRAM: ld(r1 5)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 93	PC: 9	AR: 5	DR: 48	R0: 44	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 44	RIGHT_REG: 48	ALU: 5	MPC: 11	PROGRAM: ld(r1 5)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 94	PC: 10	AR: 5	DR: 48	R0: 44	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 44	RIGHT_REG: 48	ALU: 5	MPC: 0	PROGRAM: ld(r1 5)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 95	PC: 10	AR: 10	DR: cmp(r0 r1)	R0: 44	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 44	RIGHT_REG: 48	ALU: 5	MPC: 23	PROGRAM: cmp(r0 r1)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_RIGHT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.REGISTER | Signal.EXECUTE_ALU_OPERATION, ALUOperations.CMP | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 96	PC: 11	AR: 10	DR: cmp(r0 r1)	R0: 44	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 44	RIGHT_REG: 48	ALU: -4	MPC: 0	PROGRAM: cmp(r0 r1)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 97	PC: 11	AR: 11	DR: jnz(7)	R0: 44	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 44	RIGHT_REG: 48	ALU: -4	MPC: 27	PROGRAM: jnz(7)	SIGNALS: Signal.LATCH_PROGRAM_COUNTER, PC.MPROGRAM, Signal.CHECK_NOT_ZERO_FLAG | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 98	PC: 7	AR: 11	DR: jnz(7)	R0: 44	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 44	RIGHT_REG: 48	ALU: -4	MPC: 0	PROGRAM: jnz(7)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 99	PC: 7	AR: 7	DR: ld(r0 1)	R0: 44	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 44	RIGHT_REG: 48	ALU: -4	MPC: 9	PROGRAM: ld(r0 1)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 100	PC: 7	AR: 1	DR: ld(r0 1)	R0: 44	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 44	RIGHT_REG: 48	ALU: 1	MPC: 10	PROGRAM: ld(r0 1)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  INFO    machine:signal_read   input: ['w', 'o', 'r', 'l', 'd'] >>  
  DEBUG   machine:simulate      TICK: 101	PC: 7	AR: 1	DR: 32	R0: 44	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 44	RIGHT_REG: 48	ALU: 1	MPC: 11	PROGRAM: ld(r0 1)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 102	PC: 8	AR: 1	DR: 32	R0: 32	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 44	RIGHT_REG: 48	ALU: 1	MPC: 0	PROGRAM: ld(r0 1)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 103	PC: 8	AR: 8	DR: st(2 r0)	R0: 32	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 44	RIGHT_REG: 48	ALU: 1	MPC: 3	PROGRAM: st(2 r0)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 104	PC: 8	AR: 2	DR: st(2 r0)	R0: 32	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 44	RIGHT_REG: 48	ALU: 2	MPC: 4	PROGRAM: st(2 r0)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.LEFT | Signal.LATCH_DATA_REGISTER, DataRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 105	PC: 8	AR: 2	DR: 32	R0: 32	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 32	RIGHT_REG: 48	ALU: 32	MPC: 5	PROGRAM: st(2 r0)	SIGNALS: Signal.SIGNAL_WRITE | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  INFO    machine:signal_write  output: ['H', 'e', 'l', 'l', 'o', ',', ' '] <<  
  DEBUG   machine:simulate      TICK: 106	PC: 9	AR: 2	DR: 32	R0: 32	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 32	RIGHT_REG: 48	ALU: 32	MPC: 0	PROGRAM: st(2 r0)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 107	PC: 9	AR: 9	DR: ld(r1 5)	R0: 32	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 32	RIGHT_REG: 48	ALU: 32	MPC: 9	PROGRAM: ld(r1 5)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 108	PC: 9	AR: 5	DR: ld(r1 5)	R0: 32	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 32	RIGHT_REG: 48	ALU: 5	MPC: 10	PROGRAM: ld(r1 5)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 109	PC: 9	AR: 5	DR: 48	R0: 32	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 32	RIGHT_REG: 48	ALU: 5	MPC: 11	PROGRAM: ld(r1 5)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 110	PC: 10	AR: 5	DR: 48	R0: 32	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 32	RIGHT_REG: 48	ALU: 5	MPC: 0	PROGRAM: ld(r1 5)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 111	PC: 10	AR: 10	DR: cmp(r0 r1)	R0: 32	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 32	RIGHT_REG: 48	ALU: 5	MPC: 23	PROGRAM: cmp(r0 r1)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_RIGHT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.REGISTER | Signal.EXECUTE_ALU_OPERATION, ALUOperations.CMP | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 112	PC: 11	AR: 10	DR: cmp(r0 r1)	R0: 32	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 32	RIGHT_REG: 48	ALU: -16	MPC: 0	PROGRAM: cmp(r0 r1)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 113	PC: 11	AR: 11	DR: jnz(7)	R0: 32	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 32	RIGHT_REG: 48	ALU: -16	MPC: 27	PROGRAM: jnz(7)	SIGNALS: Signal.LATCH_PROGRAM_COUNTER, PC.MPROGRAM, Signal.CHECK_NOT_ZERO_FLAG | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 114	PC: 7	AR: 11	DR: jnz(7)	R0: 32	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 32	RIGHT_REG: 48	ALU: -16	MPC: 0	PROGRAM: jnz(7)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 115	PC: 7	AR: 7	DR: ld(r0 1)	R0: 32	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 32	RIGHT_REG: 48	ALU: -16	MPC: 9	PROGRAM: ld(r0 1)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 116	PC: 7	AR: 1	DR: ld(r0 1)	R0: 32	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 32	RIGHT_REG: 48	ALU: 1	MPC: 10	PROGRAM: ld(r0 1)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  INFO    machine:signal_read   input: ['o', 'r', 'l', 'd'] >> w
  DEBUG   machine:simulate      TICK: 117	PC: 7	AR: 1	DR: 119	R0: 32	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 32	RIGHT_REG: 48	ALU: 1	MPC: 11	PROGRAM: ld(r0 1)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 118	PC: 8	AR: 1	DR: 119	R0: 119	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 32	RIGHT_REG: 48	ALU: 1	MPC: 0	PROGRAM: ld(r0 1)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 119	PC: 8	AR: 8	DR: st(2 r0)	R0: 119	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 32	RIGHT_REG: 48	ALU: 1	MPC: 3	PROGRAM: st(2 r0)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 120	PC: 8	AR: 2	DR: st(2 r0)	R0: 119	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 32	RIGHT_REG: 48	ALU: 2	MPC: 4	PROGRAM: st(2 r0)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.LEFT | Signal.LATCH_DATA_REGISTER, DataRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 121	PC: 8	AR: 2	DR: 119	R0: 119	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 119	RIGHT_REG: 48	ALU: 119	MPC: 5	PROGRAM: st(2 r0)	SIGNALS: Signal.SIGNAL_WRITE | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  INFO    machine:signal_write  output: ['H', 'e', 'l', 'l', 'o', ',', ' ', 'w'] << w
  DEBUG   machine:simulate      TICK: 122	PC: 9	AR: 2	DR: 119	R0: 119	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 119	RIGHT_REG: 48	ALU: 119	MPC: 0	PROGRAM: st(2 r0)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 123	PC: 9	AR: 9	DR: ld(r1 5)	R0: 119	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 119	RIGHT_REG: 48	ALU: 119	MPC: 9	PROGRAM: ld(r1 5)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 124	PC: 9	AR: 5	DR: ld(r1 5)	R0: 119	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 119	RIGHT_REG: 48	ALU: 5	MPC: 10	PROGRAM: ld(r1 5)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 125	PC: 9	AR: 5	DR: 48	R0: 119	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 119	RIGHT_REG: 48	ALU: 5	MPC: 11	PROGRAM: ld(r1 5)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 126	PC: 10	AR: 5	DR: 48	R0: 119	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 119	RIGHT_REG: 48	ALU: 5	MPC: 0	PROGRAM: ld(r1 5)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 127	PC: 10	AR: 10	DR: cmp(r0 r1)	R0: 119	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 119	RIGHT_REG: 48	ALU: 5	MPC: 23	PROGRAM: cmp(r0 r1)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_RIGHT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.REGISTER | Signal.EXECUTE_ALU_OPERATION, ALUOperations.CMP | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 128	PC: 11	AR: 10	DR: cmp(r0 r1)	R0: 119	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 119	RIGHT_REG: 48	ALU: 71	MPC: 0	PROGRAM: cmp(r0 r1)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 129	PC: 11	AR: 11	DR: jnz(7)	R0: 119	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 119	RIGHT_REG: 48	ALU: 71	MPC: 27	PROGRAM: jnz(7)	SIGNALS: Signal.LATCH_PROGRAM_COUNTER, PC.MPROGRAM, Signal.CHECK_NOT_ZERO_FLAG | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 130	PC: 7	AR: 11	DR: jnz(7)	R0: 119	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 119	RIGHT_REG: 48	ALU: 71	MPC: 0	PROGRAM: jnz(7)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 131	PC: 7	AR: 7	DR: ld(r0 1)	R0: 119	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 119	RIGHT_REG: 48	ALU: 71	MPC: 9	PROGRAM: ld(r0 1)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 132	PC: 7	AR: 1	DR: ld(r0 1)	R0: 119	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 119	RIGHT_REG: 48	ALU: 1	MPC: 10	PROGRAM: ld(r0 1)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  INFO    machine:signal_read   input: ['r', 'l', 'd'] >> o
  DEBUG   machine:simulate      TICK: 133	PC: 7	AR: 1	DR: 111	R0: 119	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 119	RIGHT_REG: 48	ALU: 1	MPC: 11	PROGRAM: ld(r0 1)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 134	PC: 8	AR: 1	DR: 111	R0: 111	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 119	RIGHT_REG: 48	ALU: 1	MPC: 0	PROGRAM: ld(r0 1)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 135	PC: 8	AR: 8	DR: st(2 r0)	R0: 111	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 119	RIGHT_REG: 48	ALU: 1	MPC: 3	PROGRAM: st(2 r0)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 136	PC: 8	AR: 2	DR: st(2 r0)	R0: 111	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 119	RIGHT_REG: 48	ALU: 2	MPC: 4	PROGRAM: st(2 r0)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.LEFT | Signal.LATCH_DATA_REGISTER, DataRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 137	PC: 8	AR: 2	DR: 111	R0: 111	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 48	ALU: 111	MPC: 5	PROGRAM: st(2 r0)	SIGNALS: Signal.SIGNAL_WRITE | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  INFO    machine:signal_write  output: ['H', 'e', 'l', 'l', 'o', ',', ' ', 'w', 'o'] << o
  DEBUG   machine:simulate      TICK: 138	PC: 9	AR: 2	DR: 111	R0: 111	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 48	ALU: 111	MPC: 0	PROGRAM: st(2 r0)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 139	PC: 9	AR: 9	DR: ld(r1 5)	R0: 111	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 48	ALU: 111	MPC: 9	PROGRAM: ld(r1 5)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 140	PC: 9	AR: 5	DR: ld(r1 5)	R0: 111	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 48	ALU: 5	MPC: 10	PROGRAM: ld(r1 5)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 141	PC: 9	AR: 5	DR: 48	R0: 111	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 48	ALU: 5	MPC: 11	PROGRAM: ld(r1 5)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 142	PC: 10	AR: 5	DR: 48	R0: 111	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 48	ALU: 5	MPC: 0	PROGRAM: ld(r1 5)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 143	PC: 10	AR: 10	DR: cmp(r0 r1)	R0: 111	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 48	ALU: 5	MPC: 23	PROGRAM: cmp(r0 r1)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_RIGHT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.REGISTER | Signal.EXECUTE_ALU_OPERATION, ALUOperations.CMP | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 144	PC: 11	AR: 10	DR: cmp(r0 r1)	R0: 111	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 48	ALU: 63	MPC: 0	PROGRAM: cmp(r0 r1)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 145	PC: 11	AR: 11	DR: jnz(7)	R0: 111	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 48	ALU: 63	MPC: 27	PROGRAM: jnz(7)	SIGNALS: Signal.LATCH_PROGRAM_COUNTER, PC.MPROGRAM, Signal.CHECK_NOT_ZERO_FLAG | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 146	PC: 7	AR: 11	DR: jnz(7)	R0: 111	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 48	ALU: 63	MPC: 0	PROGRAM: jnz(7)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 147	PC: 7	AR: 7	DR: ld(r0 1)	R0: 111	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 48	ALU: 63	MPC: 9	PROGRAM: ld(r0 1)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 148	PC: 7	AR: 1	DR: ld(r0 1)	R0: 111	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 48	ALU: 1	MPC: 10	PROGRAM: ld(r0 1)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  INFO    machine:signal_read   input: ['l', 'd'] >> r
  DEBUG   machine:simulate      TICK: 149	PC: 7	AR: 1	DR: 114	R0: 111	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 48	ALU: 1	MPC: 11	PROGRAM: ld(r0 1)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 150	PC: 8	AR: 1	DR: 114	R0: 114	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 48	ALU: 1	MPC: 0	PROGRAM: ld(r0 1)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 151	PC: 8	AR: 8	DR: st(2 r0)	R0: 114	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 48	ALU: 1	MPC: 3	PROGRAM: st(2 r0)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 152	PC: 8	AR: 2	DR: st(2 r0)	R0: 114	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 48	ALU: 2	MPC: 4	PROGRAM: st(2 r0)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.LEFT | Signal.LATCH_DATA_REGISTER, DataRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 153	PC: 8	AR: 2	DR: 114	R0: 114	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 114	RIGHT_REG: 48	ALU: 114	MPC: 5	PROGRAM: st(2 r0)	SIGNALS: Signal.SIGNAL_WRITE | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  INFO    machine:signal_write  output: ['H', 'e', 'l', 'l', 'o', ',', ' ', 'w', 'o', 'r'] << r
  DEBUG   machine:simulate      TICK: 154	PC: 9	AR: 2	DR: 114	R0: 114	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 114	RIGHT_REG: 48	ALU: 114	MPC: 0	PROGRAM: st(2 r0)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 155	PC: 9	AR: 9	DR: ld(r1 5)	R0: 114	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 114	RIGHT_REG: 48	ALU: 114	MPC: 9	PROGRAM: ld(r1 5)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 156	PC: 9	AR: 5	DR: ld(r1 5)	R0: 114	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 114	RIGHT_REG: 48	ALU: 5	MPC: 10	PROGRAM: ld(r1 5)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 157	PC: 9	AR: 5	DR: 48	R0: 114	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 114	RIGHT_REG: 48	ALU: 5	MPC: 11	PROGRAM: ld(r1 5)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 158	PC: 10	AR: 5	DR: 48	R0: 114	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 114	RIGHT_REG: 48	ALU: 5	MPC: 0	PROGRAM: ld(r1 5)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 159	PC: 10	AR: 10	DR: cmp(r0 r1)	R0: 114	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 114	RIGHT_REG: 48	ALU: 5	MPC: 23	PROGRAM: cmp(r0 r1)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_RIGHT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.REGISTER | Signal.EXECUTE_ALU_OPERATION, ALUOperations.CMP | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 160	PC: 11	AR: 10	DR: cmp(r0 r1)	R0: 114	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 114	RIGHT_REG: 48	ALU: 66	MPC: 0	PROGRAM: cmp(r0 r1)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 161	PC: 11	AR: 11	DR: jnz(7)	R0: 114	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 114	RIGHT_REG: 48	ALU: 66	MPC: 27	PROGRAM: jnz(7)	SIGNALS: Signal.LATCH_PROGRAM_COUNTER, PC.MPROGRAM, Signal.CHECK_NOT_ZERO_FLAG | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 162	PC: 7	AR: 11	DR: jnz(7)	R0: 114	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 114	RIGHT_REG: 48	ALU: 66	MPC: 0	PROGRAM: jnz(7)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 163	PC: 7	AR: 7	DR: ld(r0 1)	R0: 114	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 114	RIGHT_REG: 48	ALU: 66	MPC: 9	PROGRAM: ld(r0 1)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 164	PC: 7	AR: 1	DR: ld(r0 1)	R0: 114	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 114	RIGHT_REG: 48	ALU: 1	MPC: 10	PROGRAM: ld(r0 1)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  INFO    machine:signal_read   input: ['d'] >> l
  DEBUG   machine:simulate      TICK: 165	PC: 7	AR: 1	DR: 108	R0: 114	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 114	RIGHT_REG: 48	ALU: 1	MPC: 11	PROGRAM: ld(r0 1)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 166	PC: 8	AR: 1	DR: 108	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 114	RIGHT_REG: 48	ALU: 1	MPC: 0	PROGRAM: ld(r0 1)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 167	PC: 8	AR: 8	DR: st(2 r0)	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 114	RIGHT_REG: 48	ALU: 1	MPC: 3	PROGRAM: st(2 r0)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 168	PC: 8	AR: 2	DR: st(2 r0)	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 114	RIGHT_REG: 48	ALU: 2	MPC: 4	PROGRAM: st(2 r0)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.LEFT | Signal.LATCH_DATA_REGISTER, DataRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 169	PC: 8	AR: 2	DR: 108	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 108	MPC: 5	PROGRAM: st(2 r0)	SIGNALS: Signal.SIGNAL_WRITE | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  INFO    machine:signal_write  output: ['H', 'e', 'l', 'l', 'o', ',', ' ', 'w', 'o', 'r', 'l'] << l
  DEBUG   machine:simulate      TICK: 170	PC: 9	AR: 2	DR: 108	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 108	MPC: 0	PROGRAM: st(2 r0)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 171	PC: 9	AR: 9	DR: ld(r1 5)	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 108	MPC: 9	PROGRAM: ld(r1 5)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 172	PC: 9	AR: 5	DR: ld(r1 5)	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 5	MPC: 10	PROGRAM: ld(r1 5)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 173	PC: 9	AR: 5	DR: 48	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 5	MPC: 11	PROGRAM: ld(r1 5)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 174	PC: 10	AR: 5	DR: 48	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 5	MPC: 0	PROGRAM: ld(r1 5)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 175	PC: 10	AR: 10	DR: cmp(r0 r1)	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 5	MPC: 23	PROGRAM: cmp(r0 r1)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_RIGHT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.REGISTER | Signal.EXECUTE_ALU_OPERATION, ALUOperations.CMP | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 176	PC: 11	AR: 10	DR: cmp(r0 r1)	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 60	MPC: 0	PROGRAM: cmp(r0 r1)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 177	PC: 11	AR: 11	DR: jnz(7)	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 60	MPC: 27	PROGRAM: jnz(7)	SIGNALS: Signal.LATCH_PROGRAM_COUNTER, PC.MPROGRAM, Signal.CHECK_NOT_ZERO_FLAG | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 178	PC: 7	AR: 11	DR: jnz(7)	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 60	MPC: 0	PROGRAM: jnz(7)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 179	PC: 7	AR: 7	DR: ld(r0 1)	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 60	MPC: 9	PROGRAM: ld(r0 1)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 180	PC: 7	AR: 1	DR: ld(r0 1)	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 1	MPC: 10	PROGRAM: ld(r0 1)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  INFO    machine:signal_read   input: [] >> d
  DEBUG   machine:simulate      TICK: 181	PC: 7	AR: 1	DR: 100	R0: 108	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 1	MPC: 11	PROGRAM: ld(r0 1)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 182	PC: 8	AR: 1	DR: 100	R0: 100	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 1	MPC: 0	PROGRAM: ld(r0 1)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 183	PC: 8	AR: 8	DR: st(2 r0)	R0: 100	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 1	MPC: 3	PROGRAM: st(2 r0)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 184	PC: 8	AR: 2	DR: st(2 r0)	R0: 100	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 48	ALU: 2	MPC: 4	PROGRAM: st(2 r0)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.LEFT | Signal.LATCH_DATA_REGISTER, DataRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 185	PC: 8	AR: 2	DR: 100	R0: 100	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 100	RIGHT_REG: 48	ALU: 100	MPC: 5	PROGRAM: st(2 r0)	SIGNALS: Signal.SIGNAL_WRITE | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  INFO    machine:signal_write  output: ['H', 'e', 'l', 'l', 'o', ',', ' ', 'w', 'o', 'r', 'l', 'd'] << d
  DEBUG   machine:simulate      TICK: 186	PC: 9	AR: 2	DR: 100	R0: 100	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 100	RIGHT_REG: 48	ALU: 100	MPC: 0	PROGRAM: st(2 r0)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 187	PC: 9	AR: 9	DR: ld(r1 5)	R0: 100	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 100	RIGHT_REG: 48	ALU: 100	MPC: 9	PROGRAM: ld(r1 5)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 188	PC: 9	AR: 5	DR: ld(r1 5)	R0: 100	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 100	RIGHT_REG: 48	ALU: 5	MPC: 10	PROGRAM: ld(r1 5)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 189	PC: 9	AR: 5	DR: 48	R0: 100	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 100	RIGHT_REG: 48	ALU: 5	MPC: 11	PROGRAM: ld(r1 5)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 190	PC: 10	AR: 5	DR: 48	R0: 100	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 100	RIGHT_REG: 48	ALU: 5	MPC: 0	PROGRAM: ld(r1 5)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 191	PC: 10	AR: 10	DR: cmp(r0 r1)	R0: 100	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 100	RIGHT_REG: 48	ALU: 5	MPC: 23	PROGRAM: cmp(r0 r1)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_RIGHT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.REGISTER | Signal.EXECUTE_ALU_OPERATION, ALUOperations.CMP | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 192	PC: 11	AR: 10	DR: cmp(r0 r1)	R0: 100	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 100	RIGHT_REG: 48	ALU: 52	MPC: 0	PROGRAM: cmp(r0 r1)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 193	PC: 11	AR: 11	DR: jnz(7)	R0: 100	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 100	RIGHT_REG: 48	ALU: 52	MPC: 27	PROGRAM: jnz(7)	SIGNALS: Signal.LATCH_PROGRAM_COUNTER, PC.MPROGRAM, Signal.CHECK_NOT_ZERO_FLAG | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 194	PC: 7	AR: 11	DR: jnz(7)	R0: 100	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 100	RIGHT_REG: 48	ALU: 52	MPC: 0	PROGRAM: jnz(7)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 195	PC: 7	AR: 7	DR: ld(r0 1)	R0: 100	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 100	RIGHT_REG: 48	ALU: 52	MPC: 9	PROGRAM: ld(r0 1)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 196	PC: 7	AR: 1	DR: ld(r0 1)	R0: 100	R1: 48	R2: 0	R3: 0	R4: 0	LEFT_REG: 100	RIGHT_REG: 48	ALU: 1	MPC: 10	PROGRAM: ld(r0 1)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  WARNING machine:simulate      input buffer is empty

