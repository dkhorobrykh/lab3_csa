in_source: |-
  .data:
    message: "hello, world!"
    length: 13
    input: 1
    output: 2
    zero: 0

  .code:
    mva r0 message
    mov r1 zero
    loop:
      inc r0
      inc r1
      lda r2 r0
      st output r2
      mov r2 length
      cmp r1 r2
      jz end
      jmp loop
    end:
      hlt
in_stdin: |

out_code: |-
  [
      {
          "index": 0,
          "opcode": "jmp",
          "terms": [
              23
          ]
      },
      null,
      null,
      13,
      104,
      101,
      108,
      108,
      111,
      44,
      32,
      119,
      111,
      114,
      108,
      100,
      33,
      13,
      1,
      2,
      0,
      25,
      33,
      {
          "index": 1,
          "opcode": "mva",
          "terms": [
              "r0",
              3
          ]
      },
      {
          "index": 2,
          "opcode": "ld",
          "terms": [
              "r1",
              20
          ]
      },
      {
          "index": 3,
          "opcode": "inc",
          "terms": [
              "r0"
          ]
      },
      {
          "index": 4,
          "opcode": "inc",
          "terms": [
              "r1"
          ]
      },
      {
          "index": 5,
          "opcode": "lda",
          "terms": [
              "r2",
              "r0"
          ]
      },
      {
          "index": 6,
          "opcode": "st",
          "terms": [
              2,
              "r2"
          ]
      },
      {
          "index": 7,
          "opcode": "ld",
          "terms": [
              "r2",
              17
          ]
      },
      {
          "index": 8,
          "opcode": "cmp",
          "terms": [
              "r1",
              "r2"
          ]
      },
      {
          "index": 9,
          "opcode": "jz",
          "terms": [
              33
          ]
      },
      {
          "index": 10,
          "opcode": "jmp",
          "terms": [
              25
          ]
      },
      {
          "index": 11,
          "opcode": "hlt",
          "terms": []
      }
  ]
out_log: |
  DEBUG   machine:simulate      TICK: 0	PC: 0	AR: 0	DR: 0	R0: 0	R1: 0	R2: 0	R3: 0	R4: 0	LEFT_REG: 0	RIGHT_REG: 0	ALU: 0	MPC: 0	PROGRAM: None	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 1	PC: 0	AR: 0	DR: jmp(23)	R0: 0	R1: 0	R2: 0	R3: 0	R4: 0	LEFT_REG: 0	RIGHT_REG: 0	ALU: 0	MPC: 25	PROGRAM: jmp(23)	SIGNALS: Signal.LATCH_PROGRAM_COUNTER, PC.MPROGRAM | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 2	PC: 23	AR: 0	DR: jmp(23)	R0: 0	R1: 0	R2: 0	R3: 0	R4: 0	LEFT_REG: 0	RIGHT_REG: 0	ALU: 0	MPC: 0	PROGRAM: jmp(23)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 3	PC: 23	AR: 23	DR: mva(r0 3)	R0: 0	R1: 0	R2: 0	R3: 0	R4: 0	LEFT_REG: 0	RIGHT_REG: 0	ALU: 0	MPC: 2	PROGRAM: mva(r0 3)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.EXECUTE_ALU_OPERATION, ALUOperations.LEFT | Signal.LATCH_REGISTER, Register.ALU,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 4	PC: 24	AR: 23	DR: mva(r0 3)	R0: 3	R1: 0	R2: 0	R3: 0	R4: 0	LEFT_REG: 0	RIGHT_REG: 0	ALU: 3	MPC: 0	PROGRAM: mva(r0 3)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 5	PC: 24	AR: 24	DR: ld(r1 20)	R0: 3	R1: 0	R2: 0	R3: 0	R4: 0	LEFT_REG: 0	RIGHT_REG: 0	ALU: 3	MPC: 9	PROGRAM: ld(r1 20)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 6	PC: 24	AR: 20	DR: ld(r1 20)	R0: 3	R1: 0	R2: 0	R3: 0	R4: 0	LEFT_REG: 0	RIGHT_REG: 0	ALU: 20	MPC: 10	PROGRAM: ld(r1 20)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 7	PC: 24	AR: 20	DR: 0	R0: 3	R1: 0	R2: 0	R3: 0	R4: 0	LEFT_REG: 0	RIGHT_REG: 0	ALU: 20	MPC: 11	PROGRAM: ld(r1 20)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 8	PC: 25	AR: 20	DR: 0	R0: 3	R1: 0	R2: 0	R3: 0	R4: 0	LEFT_REG: 0	RIGHT_REG: 0	ALU: 20	MPC: 0	PROGRAM: ld(r1 20)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 9	PC: 25	AR: 25	DR: inc(r0)	R0: 3	R1: 0	R2: 0	R3: 0	R4: 0	LEFT_REG: 0	RIGHT_REG: 0	ALU: 20	MPC: 19	PROGRAM: inc(r0)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.PLUS_ONE | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_REGISTER, Register.ALU,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 10	PC: 26	AR: 25	DR: inc(r0)	R0: 4	R1: 0	R2: 0	R3: 0	R4: 0	LEFT_REG: 3	RIGHT_REG: 0	ALU: 4	MPC: 0	PROGRAM: inc(r0)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 11	PC: 26	AR: 26	DR: inc(r1)	R0: 4	R1: 0	R2: 0	R3: 0	R4: 0	LEFT_REG: 3	RIGHT_REG: 0	ALU: 4	MPC: 19	PROGRAM: inc(r1)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.PLUS_ONE | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_REGISTER, Register.ALU,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 12	PC: 27	AR: 26	DR: inc(r1)	R0: 4	R1: 1	R2: 0	R3: 0	R4: 0	LEFT_REG: 0	RIGHT_REG: 0	ALU: 1	MPC: 0	PROGRAM: inc(r1)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 13	PC: 27	AR: 27	DR: lda(r2 r0)	R0: 4	R1: 1	R2: 0	R3: 0	R4: 0	LEFT_REG: 0	RIGHT_REG: 0	ALU: 1	MPC: 12	PROGRAM: lda(r2 r0)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.LEFT | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 14	PC: 27	AR: 4	DR: lda(r2 r0)	R0: 4	R1: 1	R2: 0	R3: 0	R4: 0	LEFT_REG: 4	RIGHT_REG: 0	ALU: 4	MPC: 13	PROGRAM: lda(r2 r0)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 15	PC: 27	AR: 4	DR: 104	R0: 4	R1: 1	R2: 0	R3: 0	R4: 0	LEFT_REG: 4	RIGHT_REG: 0	ALU: 4	MPC: 14	PROGRAM: lda(r2 r0)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 16	PC: 28	AR: 4	DR: 104	R0: 4	R1: 1	R2: 104	R3: 0	R4: 0	LEFT_REG: 4	RIGHT_REG: 0	ALU: 4	MPC: 0	PROGRAM: lda(r2 r0)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 17	PC: 28	AR: 28	DR: st(2 r2)	R0: 4	R1: 1	R2: 104	R3: 0	R4: 0	LEFT_REG: 4	RIGHT_REG: 0	ALU: 4	MPC: 3	PROGRAM: st(2 r2)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 18	PC: 28	AR: 2	DR: st(2 r2)	R0: 4	R1: 1	R2: 104	R3: 0	R4: 0	LEFT_REG: 4	RIGHT_REG: 0	ALU: 2	MPC: 4	PROGRAM: st(2 r2)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.LEFT | Signal.LATCH_DATA_REGISTER, DataRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 19	PC: 28	AR: 2	DR: 104	R0: 4	R1: 1	R2: 104	R3: 0	R4: 0	LEFT_REG: 104	RIGHT_REG: 0	ALU: 104	MPC: 5	PROGRAM: st(2 r2)	SIGNALS: Signal.SIGNAL_WRITE | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  INFO    machine:signal_write  output: ['h'] << h
  DEBUG   machine:simulate      TICK: 20	PC: 29	AR: 2	DR: 104	R0: 4	R1: 1	R2: 104	R3: 0	R4: 0	LEFT_REG: 104	RIGHT_REG: 0	ALU: 104	MPC: 0	PROGRAM: st(2 r2)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 21	PC: 29	AR: 29	DR: ld(r2 17)	R0: 4	R1: 1	R2: 104	R3: 0	R4: 0	LEFT_REG: 104	RIGHT_REG: 0	ALU: 104	MPC: 9	PROGRAM: ld(r2 17)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 22	PC: 29	AR: 17	DR: ld(r2 17)	R0: 4	R1: 1	R2: 104	R3: 0	R4: 0	LEFT_REG: 104	RIGHT_REG: 0	ALU: 17	MPC: 10	PROGRAM: ld(r2 17)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 23	PC: 29	AR: 17	DR: 13	R0: 4	R1: 1	R2: 104	R3: 0	R4: 0	LEFT_REG: 104	RIGHT_REG: 0	ALU: 17	MPC: 11	PROGRAM: ld(r2 17)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 24	PC: 30	AR: 17	DR: 13	R0: 4	R1: 1	R2: 13	R3: 0	R4: 0	LEFT_REG: 104	RIGHT_REG: 0	ALU: 17	MPC: 0	PROGRAM: ld(r2 17)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 25	PC: 30	AR: 30	DR: cmp(r1 r2)	R0: 4	R1: 1	R2: 13	R3: 0	R4: 0	LEFT_REG: 104	RIGHT_REG: 0	ALU: 17	MPC: 23	PROGRAM: cmp(r1 r2)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_RIGHT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.REGISTER | Signal.EXECUTE_ALU_OPERATION, ALUOperations.CMP | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 26	PC: 31	AR: 30	DR: cmp(r1 r2)	R0: 4	R1: 1	R2: 13	R3: 0	R4: 0	LEFT_REG: 1	RIGHT_REG: 13	ALU: -12	MPC: 0	PROGRAM: cmp(r1 r2)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 27	PC: 31	AR: 31	DR: jz(33)	R0: 4	R1: 1	R2: 13	R3: 0	R4: 0	LEFT_REG: 1	RIGHT_REG: 13	ALU: -12	MPC: 26	PROGRAM: jz(33)	SIGNALS: Signal.LATCH_PROGRAM_COUNTER, PC.MPROGRAM, Signal.CHECK_ZERO_FLAG | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 28	PC: 32	AR: 31	DR: jz(33)	R0: 4	R1: 1	R2: 13	R3: 0	R4: 0	LEFT_REG: 1	RIGHT_REG: 13	ALU: -12	MPC: 0	PROGRAM: jz(33)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 29	PC: 32	AR: 32	DR: jmp(25)	R0: 4	R1: 1	R2: 13	R3: 0	R4: 0	LEFT_REG: 1	RIGHT_REG: 13	ALU: -12	MPC: 25	PROGRAM: jmp(25)	SIGNALS: Signal.LATCH_PROGRAM_COUNTER, PC.MPROGRAM | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 30	PC: 25	AR: 32	DR: jmp(25)	R0: 4	R1: 1	R2: 13	R3: 0	R4: 0	LEFT_REG: 1	RIGHT_REG: 13	ALU: -12	MPC: 0	PROGRAM: jmp(25)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 31	PC: 25	AR: 25	DR: inc(r0)	R0: 4	R1: 1	R2: 13	R3: 0	R4: 0	LEFT_REG: 1	RIGHT_REG: 13	ALU: -12	MPC: 19	PROGRAM: inc(r0)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.PLUS_ONE | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_REGISTER, Register.ALU,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 32	PC: 26	AR: 25	DR: inc(r0)	R0: 5	R1: 1	R2: 13	R3: 0	R4: 0	LEFT_REG: 4	RIGHT_REG: 13	ALU: 5	MPC: 0	PROGRAM: inc(r0)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 33	PC: 26	AR: 26	DR: inc(r1)	R0: 5	R1: 1	R2: 13	R3: 0	R4: 0	LEFT_REG: 4	RIGHT_REG: 13	ALU: 5	MPC: 19	PROGRAM: inc(r1)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.PLUS_ONE | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_REGISTER, Register.ALU,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 34	PC: 27	AR: 26	DR: inc(r1)	R0: 5	R1: 2	R2: 13	R3: 0	R4: 0	LEFT_REG: 1	RIGHT_REG: 13	ALU: 2	MPC: 0	PROGRAM: inc(r1)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 35	PC: 27	AR: 27	DR: lda(r2 r0)	R0: 5	R1: 2	R2: 13	R3: 0	R4: 0	LEFT_REG: 1	RIGHT_REG: 13	ALU: 2	MPC: 12	PROGRAM: lda(r2 r0)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.LEFT | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 36	PC: 27	AR: 5	DR: lda(r2 r0)	R0: 5	R1: 2	R2: 13	R3: 0	R4: 0	LEFT_REG: 5	RIGHT_REG: 13	ALU: 5	MPC: 13	PROGRAM: lda(r2 r0)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 37	PC: 27	AR: 5	DR: 101	R0: 5	R1: 2	R2: 13	R3: 0	R4: 0	LEFT_REG: 5	RIGHT_REG: 13	ALU: 5	MPC: 14	PROGRAM: lda(r2 r0)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 38	PC: 28	AR: 5	DR: 101	R0: 5	R1: 2	R2: 101	R3: 0	R4: 0	LEFT_REG: 5	RIGHT_REG: 13	ALU: 5	MPC: 0	PROGRAM: lda(r2 r0)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 39	PC: 28	AR: 28	DR: st(2 r2)	R0: 5	R1: 2	R2: 101	R3: 0	R4: 0	LEFT_REG: 5	RIGHT_REG: 13	ALU: 5	MPC: 3	PROGRAM: st(2 r2)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 40	PC: 28	AR: 2	DR: st(2 r2)	R0: 5	R1: 2	R2: 101	R3: 0	R4: 0	LEFT_REG: 5	RIGHT_REG: 13	ALU: 2	MPC: 4	PROGRAM: st(2 r2)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.LEFT | Signal.LATCH_DATA_REGISTER, DataRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 41	PC: 28	AR: 2	DR: 101	R0: 5	R1: 2	R2: 101	R3: 0	R4: 0	LEFT_REG: 101	RIGHT_REG: 13	ALU: 101	MPC: 5	PROGRAM: st(2 r2)	SIGNALS: Signal.SIGNAL_WRITE | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  INFO    machine:signal_write  output: ['h', 'e'] << e
  DEBUG   machine:simulate      TICK: 42	PC: 29	AR: 2	DR: 101	R0: 5	R1: 2	R2: 101	R3: 0	R4: 0	LEFT_REG: 101	RIGHT_REG: 13	ALU: 101	MPC: 0	PROGRAM: st(2 r2)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 43	PC: 29	AR: 29	DR: ld(r2 17)	R0: 5	R1: 2	R2: 101	R3: 0	R4: 0	LEFT_REG: 101	RIGHT_REG: 13	ALU: 101	MPC: 9	PROGRAM: ld(r2 17)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 44	PC: 29	AR: 17	DR: ld(r2 17)	R0: 5	R1: 2	R2: 101	R3: 0	R4: 0	LEFT_REG: 101	RIGHT_REG: 13	ALU: 17	MPC: 10	PROGRAM: ld(r2 17)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 45	PC: 29	AR: 17	DR: 13	R0: 5	R1: 2	R2: 101	R3: 0	R4: 0	LEFT_REG: 101	RIGHT_REG: 13	ALU: 17	MPC: 11	PROGRAM: ld(r2 17)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 46	PC: 30	AR: 17	DR: 13	R0: 5	R1: 2	R2: 13	R3: 0	R4: 0	LEFT_REG: 101	RIGHT_REG: 13	ALU: 17	MPC: 0	PROGRAM: ld(r2 17)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 47	PC: 30	AR: 30	DR: cmp(r1 r2)	R0: 5	R1: 2	R2: 13	R3: 0	R4: 0	LEFT_REG: 101	RIGHT_REG: 13	ALU: 17	MPC: 23	PROGRAM: cmp(r1 r2)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_RIGHT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.REGISTER | Signal.EXECUTE_ALU_OPERATION, ALUOperations.CMP | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 48	PC: 31	AR: 30	DR: cmp(r1 r2)	R0: 5	R1: 2	R2: 13	R3: 0	R4: 0	LEFT_REG: 2	RIGHT_REG: 13	ALU: -11	MPC: 0	PROGRAM: cmp(r1 r2)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 49	PC: 31	AR: 31	DR: jz(33)	R0: 5	R1: 2	R2: 13	R3: 0	R4: 0	LEFT_REG: 2	RIGHT_REG: 13	ALU: -11	MPC: 26	PROGRAM: jz(33)	SIGNALS: Signal.LATCH_PROGRAM_COUNTER, PC.MPROGRAM, Signal.CHECK_ZERO_FLAG | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 50	PC: 32	AR: 31	DR: jz(33)	R0: 5	R1: 2	R2: 13	R3: 0	R4: 0	LEFT_REG: 2	RIGHT_REG: 13	ALU: -11	MPC: 0	PROGRAM: jz(33)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 51	PC: 32	AR: 32	DR: jmp(25)	R0: 5	R1: 2	R2: 13	R3: 0	R4: 0	LEFT_REG: 2	RIGHT_REG: 13	ALU: -11	MPC: 25	PROGRAM: jmp(25)	SIGNALS: Signal.LATCH_PROGRAM_COUNTER, PC.MPROGRAM | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 52	PC: 25	AR: 32	DR: jmp(25)	R0: 5	R1: 2	R2: 13	R3: 0	R4: 0	LEFT_REG: 2	RIGHT_REG: 13	ALU: -11	MPC: 0	PROGRAM: jmp(25)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 53	PC: 25	AR: 25	DR: inc(r0)	R0: 5	R1: 2	R2: 13	R3: 0	R4: 0	LEFT_REG: 2	RIGHT_REG: 13	ALU: -11	MPC: 19	PROGRAM: inc(r0)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.PLUS_ONE | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_REGISTER, Register.ALU,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 54	PC: 26	AR: 25	DR: inc(r0)	R0: 6	R1: 2	R2: 13	R3: 0	R4: 0	LEFT_REG: 5	RIGHT_REG: 13	ALU: 6	MPC: 0	PROGRAM: inc(r0)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 55	PC: 26	AR: 26	DR: inc(r1)	R0: 6	R1: 2	R2: 13	R3: 0	R4: 0	LEFT_REG: 5	RIGHT_REG: 13	ALU: 6	MPC: 19	PROGRAM: inc(r1)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.PLUS_ONE | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_REGISTER, Register.ALU,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 56	PC: 27	AR: 26	DR: inc(r1)	R0: 6	R1: 3	R2: 13	R3: 0	R4: 0	LEFT_REG: 2	RIGHT_REG: 13	ALU: 3	MPC: 0	PROGRAM: inc(r1)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 57	PC: 27	AR: 27	DR: lda(r2 r0)	R0: 6	R1: 3	R2: 13	R3: 0	R4: 0	LEFT_REG: 2	RIGHT_REG: 13	ALU: 3	MPC: 12	PROGRAM: lda(r2 r0)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.LEFT | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 58	PC: 27	AR: 6	DR: lda(r2 r0)	R0: 6	R1: 3	R2: 13	R3: 0	R4: 0	LEFT_REG: 6	RIGHT_REG: 13	ALU: 6	MPC: 13	PROGRAM: lda(r2 r0)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 59	PC: 27	AR: 6	DR: 108	R0: 6	R1: 3	R2: 13	R3: 0	R4: 0	LEFT_REG: 6	RIGHT_REG: 13	ALU: 6	MPC: 14	PROGRAM: lda(r2 r0)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 60	PC: 28	AR: 6	DR: 108	R0: 6	R1: 3	R2: 108	R3: 0	R4: 0	LEFT_REG: 6	RIGHT_REG: 13	ALU: 6	MPC: 0	PROGRAM: lda(r2 r0)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 61	PC: 28	AR: 28	DR: st(2 r2)	R0: 6	R1: 3	R2: 108	R3: 0	R4: 0	LEFT_REG: 6	RIGHT_REG: 13	ALU: 6	MPC: 3	PROGRAM: st(2 r2)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 62	PC: 28	AR: 2	DR: st(2 r2)	R0: 6	R1: 3	R2: 108	R3: 0	R4: 0	LEFT_REG: 6	RIGHT_REG: 13	ALU: 2	MPC: 4	PROGRAM: st(2 r2)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.LEFT | Signal.LATCH_DATA_REGISTER, DataRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 63	PC: 28	AR: 2	DR: 108	R0: 6	R1: 3	R2: 108	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 13	ALU: 108	MPC: 5	PROGRAM: st(2 r2)	SIGNALS: Signal.SIGNAL_WRITE | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  INFO    machine:signal_write  output: ['h', 'e', 'l'] << l
  DEBUG   machine:simulate      TICK: 64	PC: 29	AR: 2	DR: 108	R0: 6	R1: 3	R2: 108	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 13	ALU: 108	MPC: 0	PROGRAM: st(2 r2)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 65	PC: 29	AR: 29	DR: ld(r2 17)	R0: 6	R1: 3	R2: 108	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 13	ALU: 108	MPC: 9	PROGRAM: ld(r2 17)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 66	PC: 29	AR: 17	DR: ld(r2 17)	R0: 6	R1: 3	R2: 108	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 13	ALU: 17	MPC: 10	PROGRAM: ld(r2 17)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 67	PC: 29	AR: 17	DR: 13	R0: 6	R1: 3	R2: 108	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 13	ALU: 17	MPC: 11	PROGRAM: ld(r2 17)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 68	PC: 30	AR: 17	DR: 13	R0: 6	R1: 3	R2: 13	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 13	ALU: 17	MPC: 0	PROGRAM: ld(r2 17)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 69	PC: 30	AR: 30	DR: cmp(r1 r2)	R0: 6	R1: 3	R2: 13	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 13	ALU: 17	MPC: 23	PROGRAM: cmp(r1 r2)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_RIGHT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.REGISTER | Signal.EXECUTE_ALU_OPERATION, ALUOperations.CMP | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 70	PC: 31	AR: 30	DR: cmp(r1 r2)	R0: 6	R1: 3	R2: 13	R3: 0	R4: 0	LEFT_REG: 3	RIGHT_REG: 13	ALU: -10	MPC: 0	PROGRAM: cmp(r1 r2)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 71	PC: 31	AR: 31	DR: jz(33)	R0: 6	R1: 3	R2: 13	R3: 0	R4: 0	LEFT_REG: 3	RIGHT_REG: 13	ALU: -10	MPC: 26	PROGRAM: jz(33)	SIGNALS: Signal.LATCH_PROGRAM_COUNTER, PC.MPROGRAM, Signal.CHECK_ZERO_FLAG | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 72	PC: 32	AR: 31	DR: jz(33)	R0: 6	R1: 3	R2: 13	R3: 0	R4: 0	LEFT_REG: 3	RIGHT_REG: 13	ALU: -10	MPC: 0	PROGRAM: jz(33)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 73	PC: 32	AR: 32	DR: jmp(25)	R0: 6	R1: 3	R2: 13	R3: 0	R4: 0	LEFT_REG: 3	RIGHT_REG: 13	ALU: -10	MPC: 25	PROGRAM: jmp(25)	SIGNALS: Signal.LATCH_PROGRAM_COUNTER, PC.MPROGRAM | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 74	PC: 25	AR: 32	DR: jmp(25)	R0: 6	R1: 3	R2: 13	R3: 0	R4: 0	LEFT_REG: 3	RIGHT_REG: 13	ALU: -10	MPC: 0	PROGRAM: jmp(25)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 75	PC: 25	AR: 25	DR: inc(r0)	R0: 6	R1: 3	R2: 13	R3: 0	R4: 0	LEFT_REG: 3	RIGHT_REG: 13	ALU: -10	MPC: 19	PROGRAM: inc(r0)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.PLUS_ONE | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_REGISTER, Register.ALU,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 76	PC: 26	AR: 25	DR: inc(r0)	R0: 7	R1: 3	R2: 13	R3: 0	R4: 0	LEFT_REG: 6	RIGHT_REG: 13	ALU: 7	MPC: 0	PROGRAM: inc(r0)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 77	PC: 26	AR: 26	DR: inc(r1)	R0: 7	R1: 3	R2: 13	R3: 0	R4: 0	LEFT_REG: 6	RIGHT_REG: 13	ALU: 7	MPC: 19	PROGRAM: inc(r1)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.PLUS_ONE | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_REGISTER, Register.ALU,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 78	PC: 27	AR: 26	DR: inc(r1)	R0: 7	R1: 4	R2: 13	R3: 0	R4: 0	LEFT_REG: 3	RIGHT_REG: 13	ALU: 4	MPC: 0	PROGRAM: inc(r1)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 79	PC: 27	AR: 27	DR: lda(r2 r0)	R0: 7	R1: 4	R2: 13	R3: 0	R4: 0	LEFT_REG: 3	RIGHT_REG: 13	ALU: 4	MPC: 12	PROGRAM: lda(r2 r0)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.LEFT | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 80	PC: 27	AR: 7	DR: lda(r2 r0)	R0: 7	R1: 4	R2: 13	R3: 0	R4: 0	LEFT_REG: 7	RIGHT_REG: 13	ALU: 7	MPC: 13	PROGRAM: lda(r2 r0)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 81	PC: 27	AR: 7	DR: 108	R0: 7	R1: 4	R2: 13	R3: 0	R4: 0	LEFT_REG: 7	RIGHT_REG: 13	ALU: 7	MPC: 14	PROGRAM: lda(r2 r0)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 82	PC: 28	AR: 7	DR: 108	R0: 7	R1: 4	R2: 108	R3: 0	R4: 0	LEFT_REG: 7	RIGHT_REG: 13	ALU: 7	MPC: 0	PROGRAM: lda(r2 r0)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 83	PC: 28	AR: 28	DR: st(2 r2)	R0: 7	R1: 4	R2: 108	R3: 0	R4: 0	LEFT_REG: 7	RIGHT_REG: 13	ALU: 7	MPC: 3	PROGRAM: st(2 r2)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 84	PC: 28	AR: 2	DR: st(2 r2)	R0: 7	R1: 4	R2: 108	R3: 0	R4: 0	LEFT_REG: 7	RIGHT_REG: 13	ALU: 2	MPC: 4	PROGRAM: st(2 r2)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.LEFT | Signal.LATCH_DATA_REGISTER, DataRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 85	PC: 28	AR: 2	DR: 108	R0: 7	R1: 4	R2: 108	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 13	ALU: 108	MPC: 5	PROGRAM: st(2 r2)	SIGNALS: Signal.SIGNAL_WRITE | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  INFO    machine:signal_write  output: ['h', 'e', 'l', 'l'] << l
  DEBUG   machine:simulate      TICK: 86	PC: 29	AR: 2	DR: 108	R0: 7	R1: 4	R2: 108	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 13	ALU: 108	MPC: 0	PROGRAM: st(2 r2)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 87	PC: 29	AR: 29	DR: ld(r2 17)	R0: 7	R1: 4	R2: 108	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 13	ALU: 108	MPC: 9	PROGRAM: ld(r2 17)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 88	PC: 29	AR: 17	DR: ld(r2 17)	R0: 7	R1: 4	R2: 108	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 13	ALU: 17	MPC: 10	PROGRAM: ld(r2 17)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 89	PC: 29	AR: 17	DR: 13	R0: 7	R1: 4	R2: 108	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 13	ALU: 17	MPC: 11	PROGRAM: ld(r2 17)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 90	PC: 30	AR: 17	DR: 13	R0: 7	R1: 4	R2: 13	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 13	ALU: 17	MPC: 0	PROGRAM: ld(r2 17)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 91	PC: 30	AR: 30	DR: cmp(r1 r2)	R0: 7	R1: 4	R2: 13	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 13	ALU: 17	MPC: 23	PROGRAM: cmp(r1 r2)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_RIGHT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.REGISTER | Signal.EXECUTE_ALU_OPERATION, ALUOperations.CMP | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 92	PC: 31	AR: 30	DR: cmp(r1 r2)	R0: 7	R1: 4	R2: 13	R3: 0	R4: 0	LEFT_REG: 4	RIGHT_REG: 13	ALU: -9	MPC: 0	PROGRAM: cmp(r1 r2)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 93	PC: 31	AR: 31	DR: jz(33)	R0: 7	R1: 4	R2: 13	R3: 0	R4: 0	LEFT_REG: 4	RIGHT_REG: 13	ALU: -9	MPC: 26	PROGRAM: jz(33)	SIGNALS: Signal.LATCH_PROGRAM_COUNTER, PC.MPROGRAM, Signal.CHECK_ZERO_FLAG | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 94	PC: 32	AR: 31	DR: jz(33)	R0: 7	R1: 4	R2: 13	R3: 0	R4: 0	LEFT_REG: 4	RIGHT_REG: 13	ALU: -9	MPC: 0	PROGRAM: jz(33)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 95	PC: 32	AR: 32	DR: jmp(25)	R0: 7	R1: 4	R2: 13	R3: 0	R4: 0	LEFT_REG: 4	RIGHT_REG: 13	ALU: -9	MPC: 25	PROGRAM: jmp(25)	SIGNALS: Signal.LATCH_PROGRAM_COUNTER, PC.MPROGRAM | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 96	PC: 25	AR: 32	DR: jmp(25)	R0: 7	R1: 4	R2: 13	R3: 0	R4: 0	LEFT_REG: 4	RIGHT_REG: 13	ALU: -9	MPC: 0	PROGRAM: jmp(25)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 97	PC: 25	AR: 25	DR: inc(r0)	R0: 7	R1: 4	R2: 13	R3: 0	R4: 0	LEFT_REG: 4	RIGHT_REG: 13	ALU: -9	MPC: 19	PROGRAM: inc(r0)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.PLUS_ONE | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_REGISTER, Register.ALU,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 98	PC: 26	AR: 25	DR: inc(r0)	R0: 8	R1: 4	R2: 13	R3: 0	R4: 0	LEFT_REG: 7	RIGHT_REG: 13	ALU: 8	MPC: 0	PROGRAM: inc(r0)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 99	PC: 26	AR: 26	DR: inc(r1)	R0: 8	R1: 4	R2: 13	R3: 0	R4: 0	LEFT_REG: 7	RIGHT_REG: 13	ALU: 8	MPC: 19	PROGRAM: inc(r1)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.PLUS_ONE | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_REGISTER, Register.ALU,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 100	PC: 27	AR: 26	DR: inc(r1)	R0: 8	R1: 5	R2: 13	R3: 0	R4: 0	LEFT_REG: 4	RIGHT_REG: 13	ALU: 5	MPC: 0	PROGRAM: inc(r1)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 101	PC: 27	AR: 27	DR: lda(r2 r0)	R0: 8	R1: 5	R2: 13	R3: 0	R4: 0	LEFT_REG: 4	RIGHT_REG: 13	ALU: 5	MPC: 12	PROGRAM: lda(r2 r0)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.LEFT | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 102	PC: 27	AR: 8	DR: lda(r2 r0)	R0: 8	R1: 5	R2: 13	R3: 0	R4: 0	LEFT_REG: 8	RIGHT_REG: 13	ALU: 8	MPC: 13	PROGRAM: lda(r2 r0)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 103	PC: 27	AR: 8	DR: 111	R0: 8	R1: 5	R2: 13	R3: 0	R4: 0	LEFT_REG: 8	RIGHT_REG: 13	ALU: 8	MPC: 14	PROGRAM: lda(r2 r0)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 104	PC: 28	AR: 8	DR: 111	R0: 8	R1: 5	R2: 111	R3: 0	R4: 0	LEFT_REG: 8	RIGHT_REG: 13	ALU: 8	MPC: 0	PROGRAM: lda(r2 r0)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 105	PC: 28	AR: 28	DR: st(2 r2)	R0: 8	R1: 5	R2: 111	R3: 0	R4: 0	LEFT_REG: 8	RIGHT_REG: 13	ALU: 8	MPC: 3	PROGRAM: st(2 r2)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 106	PC: 28	AR: 2	DR: st(2 r2)	R0: 8	R1: 5	R2: 111	R3: 0	R4: 0	LEFT_REG: 8	RIGHT_REG: 13	ALU: 2	MPC: 4	PROGRAM: st(2 r2)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.LEFT | Signal.LATCH_DATA_REGISTER, DataRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 107	PC: 28	AR: 2	DR: 111	R0: 8	R1: 5	R2: 111	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 13	ALU: 111	MPC: 5	PROGRAM: st(2 r2)	SIGNALS: Signal.SIGNAL_WRITE | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  INFO    machine:signal_write  output: ['h', 'e', 'l', 'l', 'o'] << o
  DEBUG   machine:simulate      TICK: 108	PC: 29	AR: 2	DR: 111	R0: 8	R1: 5	R2: 111	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 13	ALU: 111	MPC: 0	PROGRAM: st(2 r2)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 109	PC: 29	AR: 29	DR: ld(r2 17)	R0: 8	R1: 5	R2: 111	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 13	ALU: 111	MPC: 9	PROGRAM: ld(r2 17)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 110	PC: 29	AR: 17	DR: ld(r2 17)	R0: 8	R1: 5	R2: 111	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 13	ALU: 17	MPC: 10	PROGRAM: ld(r2 17)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 111	PC: 29	AR: 17	DR: 13	R0: 8	R1: 5	R2: 111	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 13	ALU: 17	MPC: 11	PROGRAM: ld(r2 17)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 112	PC: 30	AR: 17	DR: 13	R0: 8	R1: 5	R2: 13	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 13	ALU: 17	MPC: 0	PROGRAM: ld(r2 17)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 113	PC: 30	AR: 30	DR: cmp(r1 r2)	R0: 8	R1: 5	R2: 13	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 13	ALU: 17	MPC: 23	PROGRAM: cmp(r1 r2)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_RIGHT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.REGISTER | Signal.EXECUTE_ALU_OPERATION, ALUOperations.CMP | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 114	PC: 31	AR: 30	DR: cmp(r1 r2)	R0: 8	R1: 5	R2: 13	R3: 0	R4: 0	LEFT_REG: 5	RIGHT_REG: 13	ALU: -8	MPC: 0	PROGRAM: cmp(r1 r2)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 115	PC: 31	AR: 31	DR: jz(33)	R0: 8	R1: 5	R2: 13	R3: 0	R4: 0	LEFT_REG: 5	RIGHT_REG: 13	ALU: -8	MPC: 26	PROGRAM: jz(33)	SIGNALS: Signal.LATCH_PROGRAM_COUNTER, PC.MPROGRAM, Signal.CHECK_ZERO_FLAG | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 116	PC: 32	AR: 31	DR: jz(33)	R0: 8	R1: 5	R2: 13	R3: 0	R4: 0	LEFT_REG: 5	RIGHT_REG: 13	ALU: -8	MPC: 0	PROGRAM: jz(33)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 117	PC: 32	AR: 32	DR: jmp(25)	R0: 8	R1: 5	R2: 13	R3: 0	R4: 0	LEFT_REG: 5	RIGHT_REG: 13	ALU: -8	MPC: 25	PROGRAM: jmp(25)	SIGNALS: Signal.LATCH_PROGRAM_COUNTER, PC.MPROGRAM | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 118	PC: 25	AR: 32	DR: jmp(25)	R0: 8	R1: 5	R2: 13	R3: 0	R4: 0	LEFT_REG: 5	RIGHT_REG: 13	ALU: -8	MPC: 0	PROGRAM: jmp(25)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 119	PC: 25	AR: 25	DR: inc(r0)	R0: 8	R1: 5	R2: 13	R3: 0	R4: 0	LEFT_REG: 5	RIGHT_REG: 13	ALU: -8	MPC: 19	PROGRAM: inc(r0)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.PLUS_ONE | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_REGISTER, Register.ALU,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 120	PC: 26	AR: 25	DR: inc(r0)	R0: 9	R1: 5	R2: 13	R3: 0	R4: 0	LEFT_REG: 8	RIGHT_REG: 13	ALU: 9	MPC: 0	PROGRAM: inc(r0)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 121	PC: 26	AR: 26	DR: inc(r1)	R0: 9	R1: 5	R2: 13	R3: 0	R4: 0	LEFT_REG: 8	RIGHT_REG: 13	ALU: 9	MPC: 19	PROGRAM: inc(r1)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.PLUS_ONE | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_REGISTER, Register.ALU,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 122	PC: 27	AR: 26	DR: inc(r1)	R0: 9	R1: 6	R2: 13	R3: 0	R4: 0	LEFT_REG: 5	RIGHT_REG: 13	ALU: 6	MPC: 0	PROGRAM: inc(r1)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 123	PC: 27	AR: 27	DR: lda(r2 r0)	R0: 9	R1: 6	R2: 13	R3: 0	R4: 0	LEFT_REG: 5	RIGHT_REG: 13	ALU: 6	MPC: 12	PROGRAM: lda(r2 r0)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.LEFT | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 124	PC: 27	AR: 9	DR: lda(r2 r0)	R0: 9	R1: 6	R2: 13	R3: 0	R4: 0	LEFT_REG: 9	RIGHT_REG: 13	ALU: 9	MPC: 13	PROGRAM: lda(r2 r0)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 125	PC: 27	AR: 9	DR: 44	R0: 9	R1: 6	R2: 13	R3: 0	R4: 0	LEFT_REG: 9	RIGHT_REG: 13	ALU: 9	MPC: 14	PROGRAM: lda(r2 r0)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 126	PC: 28	AR: 9	DR: 44	R0: 9	R1: 6	R2: 44	R3: 0	R4: 0	LEFT_REG: 9	RIGHT_REG: 13	ALU: 9	MPC: 0	PROGRAM: lda(r2 r0)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 127	PC: 28	AR: 28	DR: st(2 r2)	R0: 9	R1: 6	R2: 44	R3: 0	R4: 0	LEFT_REG: 9	RIGHT_REG: 13	ALU: 9	MPC: 3	PROGRAM: st(2 r2)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 128	PC: 28	AR: 2	DR: st(2 r2)	R0: 9	R1: 6	R2: 44	R3: 0	R4: 0	LEFT_REG: 9	RIGHT_REG: 13	ALU: 2	MPC: 4	PROGRAM: st(2 r2)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.LEFT | Signal.LATCH_DATA_REGISTER, DataRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 129	PC: 28	AR: 2	DR: 44	R0: 9	R1: 6	R2: 44	R3: 0	R4: 0	LEFT_REG: 44	RIGHT_REG: 13	ALU: 44	MPC: 5	PROGRAM: st(2 r2)	SIGNALS: Signal.SIGNAL_WRITE | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  INFO    machine:signal_write  output: ['h', 'e', 'l', 'l', 'o', ','] << ,
  DEBUG   machine:simulate      TICK: 130	PC: 29	AR: 2	DR: 44	R0: 9	R1: 6	R2: 44	R3: 0	R4: 0	LEFT_REG: 44	RIGHT_REG: 13	ALU: 44	MPC: 0	PROGRAM: st(2 r2)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 131	PC: 29	AR: 29	DR: ld(r2 17)	R0: 9	R1: 6	R2: 44	R3: 0	R4: 0	LEFT_REG: 44	RIGHT_REG: 13	ALU: 44	MPC: 9	PROGRAM: ld(r2 17)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 132	PC: 29	AR: 17	DR: ld(r2 17)	R0: 9	R1: 6	R2: 44	R3: 0	R4: 0	LEFT_REG: 44	RIGHT_REG: 13	ALU: 17	MPC: 10	PROGRAM: ld(r2 17)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 133	PC: 29	AR: 17	DR: 13	R0: 9	R1: 6	R2: 44	R3: 0	R4: 0	LEFT_REG: 44	RIGHT_REG: 13	ALU: 17	MPC: 11	PROGRAM: ld(r2 17)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 134	PC: 30	AR: 17	DR: 13	R0: 9	R1: 6	R2: 13	R3: 0	R4: 0	LEFT_REG: 44	RIGHT_REG: 13	ALU: 17	MPC: 0	PROGRAM: ld(r2 17)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 135	PC: 30	AR: 30	DR: cmp(r1 r2)	R0: 9	R1: 6	R2: 13	R3: 0	R4: 0	LEFT_REG: 44	RIGHT_REG: 13	ALU: 17	MPC: 23	PROGRAM: cmp(r1 r2)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_RIGHT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.REGISTER | Signal.EXECUTE_ALU_OPERATION, ALUOperations.CMP | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 136	PC: 31	AR: 30	DR: cmp(r1 r2)	R0: 9	R1: 6	R2: 13	R3: 0	R4: 0	LEFT_REG: 6	RIGHT_REG: 13	ALU: -7	MPC: 0	PROGRAM: cmp(r1 r2)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 137	PC: 31	AR: 31	DR: jz(33)	R0: 9	R1: 6	R2: 13	R3: 0	R4: 0	LEFT_REG: 6	RIGHT_REG: 13	ALU: -7	MPC: 26	PROGRAM: jz(33)	SIGNALS: Signal.LATCH_PROGRAM_COUNTER, PC.MPROGRAM, Signal.CHECK_ZERO_FLAG | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 138	PC: 32	AR: 31	DR: jz(33)	R0: 9	R1: 6	R2: 13	R3: 0	R4: 0	LEFT_REG: 6	RIGHT_REG: 13	ALU: -7	MPC: 0	PROGRAM: jz(33)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 139	PC: 32	AR: 32	DR: jmp(25)	R0: 9	R1: 6	R2: 13	R3: 0	R4: 0	LEFT_REG: 6	RIGHT_REG: 13	ALU: -7	MPC: 25	PROGRAM: jmp(25)	SIGNALS: Signal.LATCH_PROGRAM_COUNTER, PC.MPROGRAM | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 140	PC: 25	AR: 32	DR: jmp(25)	R0: 9	R1: 6	R2: 13	R3: 0	R4: 0	LEFT_REG: 6	RIGHT_REG: 13	ALU: -7	MPC: 0	PROGRAM: jmp(25)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 141	PC: 25	AR: 25	DR: inc(r0)	R0: 9	R1: 6	R2: 13	R3: 0	R4: 0	LEFT_REG: 6	RIGHT_REG: 13	ALU: -7	MPC: 19	PROGRAM: inc(r0)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.PLUS_ONE | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_REGISTER, Register.ALU,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 142	PC: 26	AR: 25	DR: inc(r0)	R0: 10	R1: 6	R2: 13	R3: 0	R4: 0	LEFT_REG: 9	RIGHT_REG: 13	ALU: 10	MPC: 0	PROGRAM: inc(r0)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 143	PC: 26	AR: 26	DR: inc(r1)	R0: 10	R1: 6	R2: 13	R3: 0	R4: 0	LEFT_REG: 9	RIGHT_REG: 13	ALU: 10	MPC: 19	PROGRAM: inc(r1)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.PLUS_ONE | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_REGISTER, Register.ALU,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 144	PC: 27	AR: 26	DR: inc(r1)	R0: 10	R1: 7	R2: 13	R3: 0	R4: 0	LEFT_REG: 6	RIGHT_REG: 13	ALU: 7	MPC: 0	PROGRAM: inc(r1)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 145	PC: 27	AR: 27	DR: lda(r2 r0)	R0: 10	R1: 7	R2: 13	R3: 0	R4: 0	LEFT_REG: 6	RIGHT_REG: 13	ALU: 7	MPC: 12	PROGRAM: lda(r2 r0)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.LEFT | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 146	PC: 27	AR: 10	DR: lda(r2 r0)	R0: 10	R1: 7	R2: 13	R3: 0	R4: 0	LEFT_REG: 10	RIGHT_REG: 13	ALU: 10	MPC: 13	PROGRAM: lda(r2 r0)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 147	PC: 27	AR: 10	DR: 32	R0: 10	R1: 7	R2: 13	R3: 0	R4: 0	LEFT_REG: 10	RIGHT_REG: 13	ALU: 10	MPC: 14	PROGRAM: lda(r2 r0)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 148	PC: 28	AR: 10	DR: 32	R0: 10	R1: 7	R2: 32	R3: 0	R4: 0	LEFT_REG: 10	RIGHT_REG: 13	ALU: 10	MPC: 0	PROGRAM: lda(r2 r0)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 149	PC: 28	AR: 28	DR: st(2 r2)	R0: 10	R1: 7	R2: 32	R3: 0	R4: 0	LEFT_REG: 10	RIGHT_REG: 13	ALU: 10	MPC: 3	PROGRAM: st(2 r2)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 150	PC: 28	AR: 2	DR: st(2 r2)	R0: 10	R1: 7	R2: 32	R3: 0	R4: 0	LEFT_REG: 10	RIGHT_REG: 13	ALU: 2	MPC: 4	PROGRAM: st(2 r2)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.LEFT | Signal.LATCH_DATA_REGISTER, DataRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 151	PC: 28	AR: 2	DR: 32	R0: 10	R1: 7	R2: 32	R3: 0	R4: 0	LEFT_REG: 32	RIGHT_REG: 13	ALU: 32	MPC: 5	PROGRAM: st(2 r2)	SIGNALS: Signal.SIGNAL_WRITE | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  INFO    machine:signal_write  output: ['h', 'e', 'l', 'l', 'o', ',', ' '] <<  
  DEBUG   machine:simulate      TICK: 152	PC: 29	AR: 2	DR: 32	R0: 10	R1: 7	R2: 32	R3: 0	R4: 0	LEFT_REG: 32	RIGHT_REG: 13	ALU: 32	MPC: 0	PROGRAM: st(2 r2)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 153	PC: 29	AR: 29	DR: ld(r2 17)	R0: 10	R1: 7	R2: 32	R3: 0	R4: 0	LEFT_REG: 32	RIGHT_REG: 13	ALU: 32	MPC: 9	PROGRAM: ld(r2 17)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 154	PC: 29	AR: 17	DR: ld(r2 17)	R0: 10	R1: 7	R2: 32	R3: 0	R4: 0	LEFT_REG: 32	RIGHT_REG: 13	ALU: 17	MPC: 10	PROGRAM: ld(r2 17)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 155	PC: 29	AR: 17	DR: 13	R0: 10	R1: 7	R2: 32	R3: 0	R4: 0	LEFT_REG: 32	RIGHT_REG: 13	ALU: 17	MPC: 11	PROGRAM: ld(r2 17)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 156	PC: 30	AR: 17	DR: 13	R0: 10	R1: 7	R2: 13	R3: 0	R4: 0	LEFT_REG: 32	RIGHT_REG: 13	ALU: 17	MPC: 0	PROGRAM: ld(r2 17)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 157	PC: 30	AR: 30	DR: cmp(r1 r2)	R0: 10	R1: 7	R2: 13	R3: 0	R4: 0	LEFT_REG: 32	RIGHT_REG: 13	ALU: 17	MPC: 23	PROGRAM: cmp(r1 r2)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_RIGHT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.REGISTER | Signal.EXECUTE_ALU_OPERATION, ALUOperations.CMP | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 158	PC: 31	AR: 30	DR: cmp(r1 r2)	R0: 10	R1: 7	R2: 13	R3: 0	R4: 0	LEFT_REG: 7	RIGHT_REG: 13	ALU: -6	MPC: 0	PROGRAM: cmp(r1 r2)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 159	PC: 31	AR: 31	DR: jz(33)	R0: 10	R1: 7	R2: 13	R3: 0	R4: 0	LEFT_REG: 7	RIGHT_REG: 13	ALU: -6	MPC: 26	PROGRAM: jz(33)	SIGNALS: Signal.LATCH_PROGRAM_COUNTER, PC.MPROGRAM, Signal.CHECK_ZERO_FLAG | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 160	PC: 32	AR: 31	DR: jz(33)	R0: 10	R1: 7	R2: 13	R3: 0	R4: 0	LEFT_REG: 7	RIGHT_REG: 13	ALU: -6	MPC: 0	PROGRAM: jz(33)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 161	PC: 32	AR: 32	DR: jmp(25)	R0: 10	R1: 7	R2: 13	R3: 0	R4: 0	LEFT_REG: 7	RIGHT_REG: 13	ALU: -6	MPC: 25	PROGRAM: jmp(25)	SIGNALS: Signal.LATCH_PROGRAM_COUNTER, PC.MPROGRAM | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 162	PC: 25	AR: 32	DR: jmp(25)	R0: 10	R1: 7	R2: 13	R3: 0	R4: 0	LEFT_REG: 7	RIGHT_REG: 13	ALU: -6	MPC: 0	PROGRAM: jmp(25)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 163	PC: 25	AR: 25	DR: inc(r0)	R0: 10	R1: 7	R2: 13	R3: 0	R4: 0	LEFT_REG: 7	RIGHT_REG: 13	ALU: -6	MPC: 19	PROGRAM: inc(r0)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.PLUS_ONE | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_REGISTER, Register.ALU,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 164	PC: 26	AR: 25	DR: inc(r0)	R0: 11	R1: 7	R2: 13	R3: 0	R4: 0	LEFT_REG: 10	RIGHT_REG: 13	ALU: 11	MPC: 0	PROGRAM: inc(r0)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 165	PC: 26	AR: 26	DR: inc(r1)	R0: 11	R1: 7	R2: 13	R3: 0	R4: 0	LEFT_REG: 10	RIGHT_REG: 13	ALU: 11	MPC: 19	PROGRAM: inc(r1)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.PLUS_ONE | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_REGISTER, Register.ALU,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 166	PC: 27	AR: 26	DR: inc(r1)	R0: 11	R1: 8	R2: 13	R3: 0	R4: 0	LEFT_REG: 7	RIGHT_REG: 13	ALU: 8	MPC: 0	PROGRAM: inc(r1)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 167	PC: 27	AR: 27	DR: lda(r2 r0)	R0: 11	R1: 8	R2: 13	R3: 0	R4: 0	LEFT_REG: 7	RIGHT_REG: 13	ALU: 8	MPC: 12	PROGRAM: lda(r2 r0)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.LEFT | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 168	PC: 27	AR: 11	DR: lda(r2 r0)	R0: 11	R1: 8	R2: 13	R3: 0	R4: 0	LEFT_REG: 11	RIGHT_REG: 13	ALU: 11	MPC: 13	PROGRAM: lda(r2 r0)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 169	PC: 27	AR: 11	DR: 119	R0: 11	R1: 8	R2: 13	R3: 0	R4: 0	LEFT_REG: 11	RIGHT_REG: 13	ALU: 11	MPC: 14	PROGRAM: lda(r2 r0)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 170	PC: 28	AR: 11	DR: 119	R0: 11	R1: 8	R2: 119	R3: 0	R4: 0	LEFT_REG: 11	RIGHT_REG: 13	ALU: 11	MPC: 0	PROGRAM: lda(r2 r0)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 171	PC: 28	AR: 28	DR: st(2 r2)	R0: 11	R1: 8	R2: 119	R3: 0	R4: 0	LEFT_REG: 11	RIGHT_REG: 13	ALU: 11	MPC: 3	PROGRAM: st(2 r2)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 172	PC: 28	AR: 2	DR: st(2 r2)	R0: 11	R1: 8	R2: 119	R3: 0	R4: 0	LEFT_REG: 11	RIGHT_REG: 13	ALU: 2	MPC: 4	PROGRAM: st(2 r2)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.LEFT | Signal.LATCH_DATA_REGISTER, DataRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 173	PC: 28	AR: 2	DR: 119	R0: 11	R1: 8	R2: 119	R3: 0	R4: 0	LEFT_REG: 119	RIGHT_REG: 13	ALU: 119	MPC: 5	PROGRAM: st(2 r2)	SIGNALS: Signal.SIGNAL_WRITE | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  INFO    machine:signal_write  output: ['h', 'e', 'l', 'l', 'o', ',', ' ', 'w'] << w
  DEBUG   machine:simulate      TICK: 174	PC: 29	AR: 2	DR: 119	R0: 11	R1: 8	R2: 119	R3: 0	R4: 0	LEFT_REG: 119	RIGHT_REG: 13	ALU: 119	MPC: 0	PROGRAM: st(2 r2)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 175	PC: 29	AR: 29	DR: ld(r2 17)	R0: 11	R1: 8	R2: 119	R3: 0	R4: 0	LEFT_REG: 119	RIGHT_REG: 13	ALU: 119	MPC: 9	PROGRAM: ld(r2 17)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 176	PC: 29	AR: 17	DR: ld(r2 17)	R0: 11	R1: 8	R2: 119	R3: 0	R4: 0	LEFT_REG: 119	RIGHT_REG: 13	ALU: 17	MPC: 10	PROGRAM: ld(r2 17)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 177	PC: 29	AR: 17	DR: 13	R0: 11	R1: 8	R2: 119	R3: 0	R4: 0	LEFT_REG: 119	RIGHT_REG: 13	ALU: 17	MPC: 11	PROGRAM: ld(r2 17)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 178	PC: 30	AR: 17	DR: 13	R0: 11	R1: 8	R2: 13	R3: 0	R4: 0	LEFT_REG: 119	RIGHT_REG: 13	ALU: 17	MPC: 0	PROGRAM: ld(r2 17)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 179	PC: 30	AR: 30	DR: cmp(r1 r2)	R0: 11	R1: 8	R2: 13	R3: 0	R4: 0	LEFT_REG: 119	RIGHT_REG: 13	ALU: 17	MPC: 23	PROGRAM: cmp(r1 r2)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_RIGHT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.REGISTER | Signal.EXECUTE_ALU_OPERATION, ALUOperations.CMP | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 180	PC: 31	AR: 30	DR: cmp(r1 r2)	R0: 11	R1: 8	R2: 13	R3: 0	R4: 0	LEFT_REG: 8	RIGHT_REG: 13	ALU: -5	MPC: 0	PROGRAM: cmp(r1 r2)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 181	PC: 31	AR: 31	DR: jz(33)	R0: 11	R1: 8	R2: 13	R3: 0	R4: 0	LEFT_REG: 8	RIGHT_REG: 13	ALU: -5	MPC: 26	PROGRAM: jz(33)	SIGNALS: Signal.LATCH_PROGRAM_COUNTER, PC.MPROGRAM, Signal.CHECK_ZERO_FLAG | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 182	PC: 32	AR: 31	DR: jz(33)	R0: 11	R1: 8	R2: 13	R3: 0	R4: 0	LEFT_REG: 8	RIGHT_REG: 13	ALU: -5	MPC: 0	PROGRAM: jz(33)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 183	PC: 32	AR: 32	DR: jmp(25)	R0: 11	R1: 8	R2: 13	R3: 0	R4: 0	LEFT_REG: 8	RIGHT_REG: 13	ALU: -5	MPC: 25	PROGRAM: jmp(25)	SIGNALS: Signal.LATCH_PROGRAM_COUNTER, PC.MPROGRAM | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 184	PC: 25	AR: 32	DR: jmp(25)	R0: 11	R1: 8	R2: 13	R3: 0	R4: 0	LEFT_REG: 8	RIGHT_REG: 13	ALU: -5	MPC: 0	PROGRAM: jmp(25)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 185	PC: 25	AR: 25	DR: inc(r0)	R0: 11	R1: 8	R2: 13	R3: 0	R4: 0	LEFT_REG: 8	RIGHT_REG: 13	ALU: -5	MPC: 19	PROGRAM: inc(r0)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.PLUS_ONE | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_REGISTER, Register.ALU,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 186	PC: 26	AR: 25	DR: inc(r0)	R0: 12	R1: 8	R2: 13	R3: 0	R4: 0	LEFT_REG: 11	RIGHT_REG: 13	ALU: 12	MPC: 0	PROGRAM: inc(r0)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 187	PC: 26	AR: 26	DR: inc(r1)	R0: 12	R1: 8	R2: 13	R3: 0	R4: 0	LEFT_REG: 11	RIGHT_REG: 13	ALU: 12	MPC: 19	PROGRAM: inc(r1)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.PLUS_ONE | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_REGISTER, Register.ALU,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 188	PC: 27	AR: 26	DR: inc(r1)	R0: 12	R1: 9	R2: 13	R3: 0	R4: 0	LEFT_REG: 8	RIGHT_REG: 13	ALU: 9	MPC: 0	PROGRAM: inc(r1)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 189	PC: 27	AR: 27	DR: lda(r2 r0)	R0: 12	R1: 9	R2: 13	R3: 0	R4: 0	LEFT_REG: 8	RIGHT_REG: 13	ALU: 9	MPC: 12	PROGRAM: lda(r2 r0)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.LEFT | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 190	PC: 27	AR: 12	DR: lda(r2 r0)	R0: 12	R1: 9	R2: 13	R3: 0	R4: 0	LEFT_REG: 12	RIGHT_REG: 13	ALU: 12	MPC: 13	PROGRAM: lda(r2 r0)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 191	PC: 27	AR: 12	DR: 111	R0: 12	R1: 9	R2: 13	R3: 0	R4: 0	LEFT_REG: 12	RIGHT_REG: 13	ALU: 12	MPC: 14	PROGRAM: lda(r2 r0)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 192	PC: 28	AR: 12	DR: 111	R0: 12	R1: 9	R2: 111	R3: 0	R4: 0	LEFT_REG: 12	RIGHT_REG: 13	ALU: 12	MPC: 0	PROGRAM: lda(r2 r0)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 193	PC: 28	AR: 28	DR: st(2 r2)	R0: 12	R1: 9	R2: 111	R3: 0	R4: 0	LEFT_REG: 12	RIGHT_REG: 13	ALU: 12	MPC: 3	PROGRAM: st(2 r2)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 194	PC: 28	AR: 2	DR: st(2 r2)	R0: 12	R1: 9	R2: 111	R3: 0	R4: 0	LEFT_REG: 12	RIGHT_REG: 13	ALU: 2	MPC: 4	PROGRAM: st(2 r2)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.LEFT | Signal.LATCH_DATA_REGISTER, DataRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 195	PC: 28	AR: 2	DR: 111	R0: 12	R1: 9	R2: 111	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 13	ALU: 111	MPC: 5	PROGRAM: st(2 r2)	SIGNALS: Signal.SIGNAL_WRITE | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  INFO    machine:signal_write  output: ['h', 'e', 'l', 'l', 'o', ',', ' ', 'w', 'o'] << o
  DEBUG   machine:simulate      TICK: 196	PC: 29	AR: 2	DR: 111	R0: 12	R1: 9	R2: 111	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 13	ALU: 111	MPC: 0	PROGRAM: st(2 r2)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 197	PC: 29	AR: 29	DR: ld(r2 17)	R0: 12	R1: 9	R2: 111	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 13	ALU: 111	MPC: 9	PROGRAM: ld(r2 17)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 198	PC: 29	AR: 17	DR: ld(r2 17)	R0: 12	R1: 9	R2: 111	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 13	ALU: 17	MPC: 10	PROGRAM: ld(r2 17)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 199	PC: 29	AR: 17	DR: 13	R0: 12	R1: 9	R2: 111	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 13	ALU: 17	MPC: 11	PROGRAM: ld(r2 17)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 200	PC: 30	AR: 17	DR: 13	R0: 12	R1: 9	R2: 13	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 13	ALU: 17	MPC: 0	PROGRAM: ld(r2 17)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 201	PC: 30	AR: 30	DR: cmp(r1 r2)	R0: 12	R1: 9	R2: 13	R3: 0	R4: 0	LEFT_REG: 111	RIGHT_REG: 13	ALU: 17	MPC: 23	PROGRAM: cmp(r1 r2)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_RIGHT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.REGISTER | Signal.EXECUTE_ALU_OPERATION, ALUOperations.CMP | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 202	PC: 31	AR: 30	DR: cmp(r1 r2)	R0: 12	R1: 9	R2: 13	R3: 0	R4: 0	LEFT_REG: 9	RIGHT_REG: 13	ALU: -4	MPC: 0	PROGRAM: cmp(r1 r2)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 203	PC: 31	AR: 31	DR: jz(33)	R0: 12	R1: 9	R2: 13	R3: 0	R4: 0	LEFT_REG: 9	RIGHT_REG: 13	ALU: -4	MPC: 26	PROGRAM: jz(33)	SIGNALS: Signal.LATCH_PROGRAM_COUNTER, PC.MPROGRAM, Signal.CHECK_ZERO_FLAG | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 204	PC: 32	AR: 31	DR: jz(33)	R0: 12	R1: 9	R2: 13	R3: 0	R4: 0	LEFT_REG: 9	RIGHT_REG: 13	ALU: -4	MPC: 0	PROGRAM: jz(33)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 205	PC: 32	AR: 32	DR: jmp(25)	R0: 12	R1: 9	R2: 13	R3: 0	R4: 0	LEFT_REG: 9	RIGHT_REG: 13	ALU: -4	MPC: 25	PROGRAM: jmp(25)	SIGNALS: Signal.LATCH_PROGRAM_COUNTER, PC.MPROGRAM | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 206	PC: 25	AR: 32	DR: jmp(25)	R0: 12	R1: 9	R2: 13	R3: 0	R4: 0	LEFT_REG: 9	RIGHT_REG: 13	ALU: -4	MPC: 0	PROGRAM: jmp(25)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 207	PC: 25	AR: 25	DR: inc(r0)	R0: 12	R1: 9	R2: 13	R3: 0	R4: 0	LEFT_REG: 9	RIGHT_REG: 13	ALU: -4	MPC: 19	PROGRAM: inc(r0)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.PLUS_ONE | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_REGISTER, Register.ALU,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 208	PC: 26	AR: 25	DR: inc(r0)	R0: 13	R1: 9	R2: 13	R3: 0	R4: 0	LEFT_REG: 12	RIGHT_REG: 13	ALU: 13	MPC: 0	PROGRAM: inc(r0)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 209	PC: 26	AR: 26	DR: inc(r1)	R0: 13	R1: 9	R2: 13	R3: 0	R4: 0	LEFT_REG: 12	RIGHT_REG: 13	ALU: 13	MPC: 19	PROGRAM: inc(r1)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.PLUS_ONE | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_REGISTER, Register.ALU,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 210	PC: 27	AR: 26	DR: inc(r1)	R0: 13	R1: 10	R2: 13	R3: 0	R4: 0	LEFT_REG: 9	RIGHT_REG: 13	ALU: 10	MPC: 0	PROGRAM: inc(r1)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 211	PC: 27	AR: 27	DR: lda(r2 r0)	R0: 13	R1: 10	R2: 13	R3: 0	R4: 0	LEFT_REG: 9	RIGHT_REG: 13	ALU: 10	MPC: 12	PROGRAM: lda(r2 r0)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.LEFT | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 212	PC: 27	AR: 13	DR: lda(r2 r0)	R0: 13	R1: 10	R2: 13	R3: 0	R4: 0	LEFT_REG: 13	RIGHT_REG: 13	ALU: 13	MPC: 13	PROGRAM: lda(r2 r0)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 213	PC: 27	AR: 13	DR: 114	R0: 13	R1: 10	R2: 13	R3: 0	R4: 0	LEFT_REG: 13	RIGHT_REG: 13	ALU: 13	MPC: 14	PROGRAM: lda(r2 r0)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 214	PC: 28	AR: 13	DR: 114	R0: 13	R1: 10	R2: 114	R3: 0	R4: 0	LEFT_REG: 13	RIGHT_REG: 13	ALU: 13	MPC: 0	PROGRAM: lda(r2 r0)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 215	PC: 28	AR: 28	DR: st(2 r2)	R0: 13	R1: 10	R2: 114	R3: 0	R4: 0	LEFT_REG: 13	RIGHT_REG: 13	ALU: 13	MPC: 3	PROGRAM: st(2 r2)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 216	PC: 28	AR: 2	DR: st(2 r2)	R0: 13	R1: 10	R2: 114	R3: 0	R4: 0	LEFT_REG: 13	RIGHT_REG: 13	ALU: 2	MPC: 4	PROGRAM: st(2 r2)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.LEFT | Signal.LATCH_DATA_REGISTER, DataRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 217	PC: 28	AR: 2	DR: 114	R0: 13	R1: 10	R2: 114	R3: 0	R4: 0	LEFT_REG: 114	RIGHT_REG: 13	ALU: 114	MPC: 5	PROGRAM: st(2 r2)	SIGNALS: Signal.SIGNAL_WRITE | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  INFO    machine:signal_write  output: ['h', 'e', 'l', 'l', 'o', ',', ' ', 'w', 'o', 'r'] << r
  DEBUG   machine:simulate      TICK: 218	PC: 29	AR: 2	DR: 114	R0: 13	R1: 10	R2: 114	R3: 0	R4: 0	LEFT_REG: 114	RIGHT_REG: 13	ALU: 114	MPC: 0	PROGRAM: st(2 r2)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 219	PC: 29	AR: 29	DR: ld(r2 17)	R0: 13	R1: 10	R2: 114	R3: 0	R4: 0	LEFT_REG: 114	RIGHT_REG: 13	ALU: 114	MPC: 9	PROGRAM: ld(r2 17)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 220	PC: 29	AR: 17	DR: ld(r2 17)	R0: 13	R1: 10	R2: 114	R3: 0	R4: 0	LEFT_REG: 114	RIGHT_REG: 13	ALU: 17	MPC: 10	PROGRAM: ld(r2 17)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 221	PC: 29	AR: 17	DR: 13	R0: 13	R1: 10	R2: 114	R3: 0	R4: 0	LEFT_REG: 114	RIGHT_REG: 13	ALU: 17	MPC: 11	PROGRAM: ld(r2 17)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 222	PC: 30	AR: 17	DR: 13	R0: 13	R1: 10	R2: 13	R3: 0	R4: 0	LEFT_REG: 114	RIGHT_REG: 13	ALU: 17	MPC: 0	PROGRAM: ld(r2 17)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 223	PC: 30	AR: 30	DR: cmp(r1 r2)	R0: 13	R1: 10	R2: 13	R3: 0	R4: 0	LEFT_REG: 114	RIGHT_REG: 13	ALU: 17	MPC: 23	PROGRAM: cmp(r1 r2)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_RIGHT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.REGISTER | Signal.EXECUTE_ALU_OPERATION, ALUOperations.CMP | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 224	PC: 31	AR: 30	DR: cmp(r1 r2)	R0: 13	R1: 10	R2: 13	R3: 0	R4: 0	LEFT_REG: 10	RIGHT_REG: 13	ALU: -3	MPC: 0	PROGRAM: cmp(r1 r2)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 225	PC: 31	AR: 31	DR: jz(33)	R0: 13	R1: 10	R2: 13	R3: 0	R4: 0	LEFT_REG: 10	RIGHT_REG: 13	ALU: -3	MPC: 26	PROGRAM: jz(33)	SIGNALS: Signal.LATCH_PROGRAM_COUNTER, PC.MPROGRAM, Signal.CHECK_ZERO_FLAG | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 226	PC: 32	AR: 31	DR: jz(33)	R0: 13	R1: 10	R2: 13	R3: 0	R4: 0	LEFT_REG: 10	RIGHT_REG: 13	ALU: -3	MPC: 0	PROGRAM: jz(33)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 227	PC: 32	AR: 32	DR: jmp(25)	R0: 13	R1: 10	R2: 13	R3: 0	R4: 0	LEFT_REG: 10	RIGHT_REG: 13	ALU: -3	MPC: 25	PROGRAM: jmp(25)	SIGNALS: Signal.LATCH_PROGRAM_COUNTER, PC.MPROGRAM | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 228	PC: 25	AR: 32	DR: jmp(25)	R0: 13	R1: 10	R2: 13	R3: 0	R4: 0	LEFT_REG: 10	RIGHT_REG: 13	ALU: -3	MPC: 0	PROGRAM: jmp(25)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 229	PC: 25	AR: 25	DR: inc(r0)	R0: 13	R1: 10	R2: 13	R3: 0	R4: 0	LEFT_REG: 10	RIGHT_REG: 13	ALU: -3	MPC: 19	PROGRAM: inc(r0)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.PLUS_ONE | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_REGISTER, Register.ALU,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 230	PC: 26	AR: 25	DR: inc(r0)	R0: 14	R1: 10	R2: 13	R3: 0	R4: 0	LEFT_REG: 13	RIGHT_REG: 13	ALU: 14	MPC: 0	PROGRAM: inc(r0)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 231	PC: 26	AR: 26	DR: inc(r1)	R0: 14	R1: 10	R2: 13	R3: 0	R4: 0	LEFT_REG: 13	RIGHT_REG: 13	ALU: 14	MPC: 19	PROGRAM: inc(r1)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.PLUS_ONE | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_REGISTER, Register.ALU,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 232	PC: 27	AR: 26	DR: inc(r1)	R0: 14	R1: 11	R2: 13	R3: 0	R4: 0	LEFT_REG: 10	RIGHT_REG: 13	ALU: 11	MPC: 0	PROGRAM: inc(r1)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 233	PC: 27	AR: 27	DR: lda(r2 r0)	R0: 14	R1: 11	R2: 13	R3: 0	R4: 0	LEFT_REG: 10	RIGHT_REG: 13	ALU: 11	MPC: 12	PROGRAM: lda(r2 r0)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.LEFT | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 234	PC: 27	AR: 14	DR: lda(r2 r0)	R0: 14	R1: 11	R2: 13	R3: 0	R4: 0	LEFT_REG: 14	RIGHT_REG: 13	ALU: 14	MPC: 13	PROGRAM: lda(r2 r0)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 235	PC: 27	AR: 14	DR: 108	R0: 14	R1: 11	R2: 13	R3: 0	R4: 0	LEFT_REG: 14	RIGHT_REG: 13	ALU: 14	MPC: 14	PROGRAM: lda(r2 r0)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 236	PC: 28	AR: 14	DR: 108	R0: 14	R1: 11	R2: 108	R3: 0	R4: 0	LEFT_REG: 14	RIGHT_REG: 13	ALU: 14	MPC: 0	PROGRAM: lda(r2 r0)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 237	PC: 28	AR: 28	DR: st(2 r2)	R0: 14	R1: 11	R2: 108	R3: 0	R4: 0	LEFT_REG: 14	RIGHT_REG: 13	ALU: 14	MPC: 3	PROGRAM: st(2 r2)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 238	PC: 28	AR: 2	DR: st(2 r2)	R0: 14	R1: 11	R2: 108	R3: 0	R4: 0	LEFT_REG: 14	RIGHT_REG: 13	ALU: 2	MPC: 4	PROGRAM: st(2 r2)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.LEFT | Signal.LATCH_DATA_REGISTER, DataRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 239	PC: 28	AR: 2	DR: 108	R0: 14	R1: 11	R2: 108	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 13	ALU: 108	MPC: 5	PROGRAM: st(2 r2)	SIGNALS: Signal.SIGNAL_WRITE | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  INFO    machine:signal_write  output: ['h', 'e', 'l', 'l', 'o', ',', ' ', 'w', 'o', 'r', 'l'] << l
  DEBUG   machine:simulate      TICK: 240	PC: 29	AR: 2	DR: 108	R0: 14	R1: 11	R2: 108	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 13	ALU: 108	MPC: 0	PROGRAM: st(2 r2)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 241	PC: 29	AR: 29	DR: ld(r2 17)	R0: 14	R1: 11	R2: 108	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 13	ALU: 108	MPC: 9	PROGRAM: ld(r2 17)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 242	PC: 29	AR: 17	DR: ld(r2 17)	R0: 14	R1: 11	R2: 108	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 13	ALU: 17	MPC: 10	PROGRAM: ld(r2 17)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 243	PC: 29	AR: 17	DR: 13	R0: 14	R1: 11	R2: 108	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 13	ALU: 17	MPC: 11	PROGRAM: ld(r2 17)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 244	PC: 30	AR: 17	DR: 13	R0: 14	R1: 11	R2: 13	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 13	ALU: 17	MPC: 0	PROGRAM: ld(r2 17)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 245	PC: 30	AR: 30	DR: cmp(r1 r2)	R0: 14	R1: 11	R2: 13	R3: 0	R4: 0	LEFT_REG: 108	RIGHT_REG: 13	ALU: 17	MPC: 23	PROGRAM: cmp(r1 r2)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_RIGHT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.REGISTER | Signal.EXECUTE_ALU_OPERATION, ALUOperations.CMP | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 246	PC: 31	AR: 30	DR: cmp(r1 r2)	R0: 14	R1: 11	R2: 13	R3: 0	R4: 0	LEFT_REG: 11	RIGHT_REG: 13	ALU: -2	MPC: 0	PROGRAM: cmp(r1 r2)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 247	PC: 31	AR: 31	DR: jz(33)	R0: 14	R1: 11	R2: 13	R3: 0	R4: 0	LEFT_REG: 11	RIGHT_REG: 13	ALU: -2	MPC: 26	PROGRAM: jz(33)	SIGNALS: Signal.LATCH_PROGRAM_COUNTER, PC.MPROGRAM, Signal.CHECK_ZERO_FLAG | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 248	PC: 32	AR: 31	DR: jz(33)	R0: 14	R1: 11	R2: 13	R3: 0	R4: 0	LEFT_REG: 11	RIGHT_REG: 13	ALU: -2	MPC: 0	PROGRAM: jz(33)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 249	PC: 32	AR: 32	DR: jmp(25)	R0: 14	R1: 11	R2: 13	R3: 0	R4: 0	LEFT_REG: 11	RIGHT_REG: 13	ALU: -2	MPC: 25	PROGRAM: jmp(25)	SIGNALS: Signal.LATCH_PROGRAM_COUNTER, PC.MPROGRAM | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 250	PC: 25	AR: 32	DR: jmp(25)	R0: 14	R1: 11	R2: 13	R3: 0	R4: 0	LEFT_REG: 11	RIGHT_REG: 13	ALU: -2	MPC: 0	PROGRAM: jmp(25)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 251	PC: 25	AR: 25	DR: inc(r0)	R0: 14	R1: 11	R2: 13	R3: 0	R4: 0	LEFT_REG: 11	RIGHT_REG: 13	ALU: -2	MPC: 19	PROGRAM: inc(r0)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.PLUS_ONE | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_REGISTER, Register.ALU,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 252	PC: 26	AR: 25	DR: inc(r0)	R0: 15	R1: 11	R2: 13	R3: 0	R4: 0	LEFT_REG: 14	RIGHT_REG: 13	ALU: 15	MPC: 0	PROGRAM: inc(r0)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 253	PC: 26	AR: 26	DR: inc(r1)	R0: 15	R1: 11	R2: 13	R3: 0	R4: 0	LEFT_REG: 14	RIGHT_REG: 13	ALU: 15	MPC: 19	PROGRAM: inc(r1)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.PLUS_ONE | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_REGISTER, Register.ALU,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 254	PC: 27	AR: 26	DR: inc(r1)	R0: 15	R1: 12	R2: 13	R3: 0	R4: 0	LEFT_REG: 11	RIGHT_REG: 13	ALU: 12	MPC: 0	PROGRAM: inc(r1)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 255	PC: 27	AR: 27	DR: lda(r2 r0)	R0: 15	R1: 12	R2: 13	R3: 0	R4: 0	LEFT_REG: 11	RIGHT_REG: 13	ALU: 12	MPC: 12	PROGRAM: lda(r2 r0)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.LEFT | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 256	PC: 27	AR: 15	DR: lda(r2 r0)	R0: 15	R1: 12	R2: 13	R3: 0	R4: 0	LEFT_REG: 15	RIGHT_REG: 13	ALU: 15	MPC: 13	PROGRAM: lda(r2 r0)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 257	PC: 27	AR: 15	DR: 100	R0: 15	R1: 12	R2: 13	R3: 0	R4: 0	LEFT_REG: 15	RIGHT_REG: 13	ALU: 15	MPC: 14	PROGRAM: lda(r2 r0)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 258	PC: 28	AR: 15	DR: 100	R0: 15	R1: 12	R2: 100	R3: 0	R4: 0	LEFT_REG: 15	RIGHT_REG: 13	ALU: 15	MPC: 0	PROGRAM: lda(r2 r0)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 259	PC: 28	AR: 28	DR: st(2 r2)	R0: 15	R1: 12	R2: 100	R3: 0	R4: 0	LEFT_REG: 15	RIGHT_REG: 13	ALU: 15	MPC: 3	PROGRAM: st(2 r2)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 260	PC: 28	AR: 2	DR: st(2 r2)	R0: 15	R1: 12	R2: 100	R3: 0	R4: 0	LEFT_REG: 15	RIGHT_REG: 13	ALU: 2	MPC: 4	PROGRAM: st(2 r2)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.LEFT | Signal.LATCH_DATA_REGISTER, DataRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 261	PC: 28	AR: 2	DR: 100	R0: 15	R1: 12	R2: 100	R3: 0	R4: 0	LEFT_REG: 100	RIGHT_REG: 13	ALU: 100	MPC: 5	PROGRAM: st(2 r2)	SIGNALS: Signal.SIGNAL_WRITE | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  INFO    machine:signal_write  output: ['h', 'e', 'l', 'l', 'o', ',', ' ', 'w', 'o', 'r', 'l', 'd'] << d
  DEBUG   machine:simulate      TICK: 262	PC: 29	AR: 2	DR: 100	R0: 15	R1: 12	R2: 100	R3: 0	R4: 0	LEFT_REG: 100	RIGHT_REG: 13	ALU: 100	MPC: 0	PROGRAM: st(2 r2)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 263	PC: 29	AR: 29	DR: ld(r2 17)	R0: 15	R1: 12	R2: 100	R3: 0	R4: 0	LEFT_REG: 100	RIGHT_REG: 13	ALU: 100	MPC: 9	PROGRAM: ld(r2 17)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 264	PC: 29	AR: 17	DR: ld(r2 17)	R0: 15	R1: 12	R2: 100	R3: 0	R4: 0	LEFT_REG: 100	RIGHT_REG: 13	ALU: 17	MPC: 10	PROGRAM: ld(r2 17)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 265	PC: 29	AR: 17	DR: 13	R0: 15	R1: 12	R2: 100	R3: 0	R4: 0	LEFT_REG: 100	RIGHT_REG: 13	ALU: 17	MPC: 11	PROGRAM: ld(r2 17)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 266	PC: 30	AR: 17	DR: 13	R0: 15	R1: 12	R2: 13	R3: 0	R4: 0	LEFT_REG: 100	RIGHT_REG: 13	ALU: 17	MPC: 0	PROGRAM: ld(r2 17)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 267	PC: 30	AR: 30	DR: cmp(r1 r2)	R0: 15	R1: 12	R2: 13	R3: 0	R4: 0	LEFT_REG: 100	RIGHT_REG: 13	ALU: 17	MPC: 23	PROGRAM: cmp(r1 r2)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_RIGHT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.REGISTER | Signal.EXECUTE_ALU_OPERATION, ALUOperations.CMP | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 268	PC: 31	AR: 30	DR: cmp(r1 r2)	R0: 15	R1: 12	R2: 13	R3: 0	R4: 0	LEFT_REG: 12	RIGHT_REG: 13	ALU: -1	MPC: 0	PROGRAM: cmp(r1 r2)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 269	PC: 31	AR: 31	DR: jz(33)	R0: 15	R1: 12	R2: 13	R3: 0	R4: 0	LEFT_REG: 12	RIGHT_REG: 13	ALU: -1	MPC: 26	PROGRAM: jz(33)	SIGNALS: Signal.LATCH_PROGRAM_COUNTER, PC.MPROGRAM, Signal.CHECK_ZERO_FLAG | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 270	PC: 32	AR: 31	DR: jz(33)	R0: 15	R1: 12	R2: 13	R3: 0	R4: 0	LEFT_REG: 12	RIGHT_REG: 13	ALU: -1	MPC: 0	PROGRAM: jz(33)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 271	PC: 32	AR: 32	DR: jmp(25)	R0: 15	R1: 12	R2: 13	R3: 0	R4: 0	LEFT_REG: 12	RIGHT_REG: 13	ALU: -1	MPC: 25	PROGRAM: jmp(25)	SIGNALS: Signal.LATCH_PROGRAM_COUNTER, PC.MPROGRAM | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 272	PC: 25	AR: 32	DR: jmp(25)	R0: 15	R1: 12	R2: 13	R3: 0	R4: 0	LEFT_REG: 12	RIGHT_REG: 13	ALU: -1	MPC: 0	PROGRAM: jmp(25)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 273	PC: 25	AR: 25	DR: inc(r0)	R0: 15	R1: 12	R2: 13	R3: 0	R4: 0	LEFT_REG: 12	RIGHT_REG: 13	ALU: -1	MPC: 19	PROGRAM: inc(r0)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.PLUS_ONE | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_REGISTER, Register.ALU,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 274	PC: 26	AR: 25	DR: inc(r0)	R0: 16	R1: 12	R2: 13	R3: 0	R4: 0	LEFT_REG: 15	RIGHT_REG: 13	ALU: 16	MPC: 0	PROGRAM: inc(r0)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 275	PC: 26	AR: 26	DR: inc(r1)	R0: 16	R1: 12	R2: 13	R3: 0	R4: 0	LEFT_REG: 15	RIGHT_REG: 13	ALU: 16	MPC: 19	PROGRAM: inc(r1)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.PLUS_ONE | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_REGISTER, Register.ALU,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 276	PC: 27	AR: 26	DR: inc(r1)	R0: 16	R1: 13	R2: 13	R3: 0	R4: 0	LEFT_REG: 12	RIGHT_REG: 13	ALU: 13	MPC: 0	PROGRAM: inc(r1)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 277	PC: 27	AR: 27	DR: lda(r2 r0)	R0: 16	R1: 13	R2: 13	R3: 0	R4: 0	LEFT_REG: 12	RIGHT_REG: 13	ALU: 13	MPC: 12	PROGRAM: lda(r2 r0)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.LEFT | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 278	PC: 27	AR: 16	DR: lda(r2 r0)	R0: 16	R1: 13	R2: 13	R3: 0	R4: 0	LEFT_REG: 16	RIGHT_REG: 13	ALU: 16	MPC: 13	PROGRAM: lda(r2 r0)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 279	PC: 27	AR: 16	DR: 33	R0: 16	R1: 13	R2: 13	R3: 0	R4: 0	LEFT_REG: 16	RIGHT_REG: 13	ALU: 16	MPC: 14	PROGRAM: lda(r2 r0)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 280	PC: 28	AR: 16	DR: 33	R0: 16	R1: 13	R2: 33	R3: 0	R4: 0	LEFT_REG: 16	RIGHT_REG: 13	ALU: 16	MPC: 0	PROGRAM: lda(r2 r0)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 281	PC: 28	AR: 28	DR: st(2 r2)	R0: 16	R1: 13	R2: 33	R3: 0	R4: 0	LEFT_REG: 16	RIGHT_REG: 13	ALU: 16	MPC: 3	PROGRAM: st(2 r2)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 282	PC: 28	AR: 2	DR: st(2 r2)	R0: 16	R1: 13	R2: 33	R3: 0	R4: 0	LEFT_REG: 16	RIGHT_REG: 13	ALU: 2	MPC: 4	PROGRAM: st(2 r2)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.LEFT | Signal.LATCH_DATA_REGISTER, DataRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 283	PC: 28	AR: 2	DR: 33	R0: 16	R1: 13	R2: 33	R3: 0	R4: 0	LEFT_REG: 33	RIGHT_REG: 13	ALU: 33	MPC: 5	PROGRAM: st(2 r2)	SIGNALS: Signal.SIGNAL_WRITE | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  INFO    machine:signal_write  output: ['h', 'e', 'l', 'l', 'o', ',', ' ', 'w', 'o', 'r', 'l', 'd', '!'] << !
  DEBUG   machine:simulate      TICK: 284	PC: 29	AR: 2	DR: 33	R0: 16	R1: 13	R2: 33	R3: 0	R4: 0	LEFT_REG: 33	RIGHT_REG: 13	ALU: 33	MPC: 0	PROGRAM: st(2 r2)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 285	PC: 29	AR: 29	DR: ld(r2 17)	R0: 16	R1: 13	R2: 33	R3: 0	R4: 0	LEFT_REG: 33	RIGHT_REG: 13	ALU: 33	MPC: 9	PROGRAM: ld(r2 17)	SIGNALS: Signal.LATCH_LEFT_ALU, LeftAlu.CONTROL_UNIT | Signal.LATCH_RIGHT_ALU, RightAlu.ZERO | Signal.EXECUTE_ALU_OPERATION, ALUOperations.ADD | Signal.LATCH_ADDRESS_REGISTER, AddressRegister.ALU | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 286	PC: 29	AR: 17	DR: ld(r2 17)	R0: 16	R1: 13	R2: 33	R3: 0	R4: 0	LEFT_REG: 33	RIGHT_REG: 13	ALU: 17	MPC: 10	PROGRAM: ld(r2 17)	SIGNALS: Signal.SIGNAL_READ | Signal.LATCH_MPC, MPC.PLUS_ONE
  DEBUG   machine:simulate      TICK: 287	PC: 29	AR: 17	DR: 13	R0: 16	R1: 13	R2: 33	R3: 0	R4: 0	LEFT_REG: 33	RIGHT_REG: 13	ALU: 17	MPC: 11	PROGRAM: ld(r2 17)	SIGNALS: Signal.LATCH_REGISTER, Register.DATA_REGISTER,  | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 288	PC: 30	AR: 17	DR: 13	R0: 16	R1: 13	R2: 13	R3: 0	R4: 0	LEFT_REG: 33	RIGHT_REG: 13	ALU: 17	MPC: 0	PROGRAM: ld(r2 17)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 289	PC: 30	AR: 30	DR: cmp(r1 r2)	R0: 16	R1: 13	R2: 13	R3: 0	R4: 0	LEFT_REG: 33	RIGHT_REG: 13	ALU: 17	MPC: 23	PROGRAM: cmp(r1 r2)	SIGNALS: Signal.LATCH_LEFT_REGISTER_TERM,  | Signal.LATCH_RIGHT_REGISTER_TERM,  | Signal.LATCH_LEFT_ALU, LeftAlu.REGISTER | Signal.LATCH_RIGHT_ALU, RightAlu.REGISTER | Signal.EXECUTE_ALU_OPERATION, ALUOperations.CMP | Signal.LATCH_PROGRAM_COUNTER, PC.PLUS_ONE | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 290	PC: 31	AR: 30	DR: cmp(r1 r2)	R0: 16	R1: 13	R2: 13	R3: 0	R4: 0	LEFT_REG: 13	RIGHT_REG: 13	ALU: 0	MPC: 0	PROGRAM: cmp(r1 r2)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 291	PC: 31	AR: 31	DR: jz(33)	R0: 16	R1: 13	R2: 13	R3: 0	R4: 0	LEFT_REG: 13	RIGHT_REG: 13	ALU: 0	MPC: 26	PROGRAM: jz(33)	SIGNALS: Signal.LATCH_PROGRAM_COUNTER, PC.MPROGRAM, Signal.CHECK_ZERO_FLAG | Signal.LATCH_MPC, MPC.ZERO
  DEBUG   machine:simulate      TICK: 292	PC: 33	AR: 31	DR: jz(33)	R0: 16	R1: 13	R2: 13	R3: 0	R4: 0	LEFT_REG: 13	RIGHT_REG: 13	ALU: 0	MPC: 0	PROGRAM: jz(33)	SIGNALS: Signal.LATCH_ADDRESS_REGISTER, AddressRegister.PROGRAM_COUNTER | Signal.SIGNAL_READ | Signal.LATCH_PROGRAM | Signal.LATCH_MPC, MPC.MPC_ADDRESS
  DEBUG   machine:simulate      TICK: 293	PC: 33	AR: 33	DR: hlt()	R0: 16	R1: 13	R2: 13	R3: 0	R4: 0	LEFT_REG: 13	RIGHT_REG: 13	ALU: 0	MPC: 29	PROGRAM: hlt()	SIGNALS: Signal.HALT
  INFO    machine:simulate      hlt
out_stdout: |
  ================================================
  output: hello, world!
  program_counter: 33
  ticks: 293
